{% doc %}
  @prompt
    Related products connected to search and discovery, allow me to use the related products from search and discovery, remove view product button

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-related-products-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding }}px0;
    background-color: {{ block.settings.background_color }};
  }

  .ai-related-products__container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-related-products__heading-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: {{ block.settings.heading_spacing }}px;
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.heading_size }}px;
    margin-top: 0;
  }

  .ai-related-products__grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.columns_desktop }}, 1fr);
    gap: {{ block.settings.grid_gap }}px;
  }

  .ai-related-products__item-{{ ai_gen_id }} {
    background-color: {{ block.settings.card_background }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid {{ block.settings.card_border_color }};
  }

  .ai-related-products__item-{{ ai_gen_id }}:hover {
    transform: translateY(-{{ block.settings.hover_lift }}px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .ai-related-products__image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: {{ block.settings.image_aspect_ratio }};
    overflow: hidden;
  }

  .ai-related-products__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-related-products__item-{{ ai_gen_id }}:hover .ai-related-products__image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-related-products__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-related-products__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-related-products__content-{{ ai_gen_id }} {
    padding: {{ block.settings.card_padding }}px;}

  .ai-related-products__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.product_title_size }}px;
    font-weight: 600;
    margin: 0 0 8px;
    color: {{ block.settings.product_title_color }};text-decoration: none;
    display: block;
    line-height: 1.3;
  }

  .ai-related-products__title-{{ ai_gen_id }}:hover {
    color: {{ block.settings.product_title_hover_color }};
  }

  .ai-related-products__vendor-{{ ai_gen_id }} {
    font-size: {{ block.settings.vendor_size }}px;
    color: {{ block.settings.vendor_color }};
    margin-bottom: 8px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .ai-related-products__price-{{ ai_gen_id }} {
    font-size: {{ block.settings.price_size }}px;
    font-weight: 600;
    color: {{ block.settings.price_color }};
    margin-bottom:0;
  }

  .ai-related-products__price-compare-{{ ai_gen_id }} {
    text-decoration: line-through;
    color: {{ block.settings.compare_price_color }};
    margin-right: 8px;
  }

  .ai-related-products__empty-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: #666;
    grid-column: 1 / -1;
  }

  .ai-related-products__empty-title-{{ ai_gen_id }} {
    font-size: 24px;
    margin-bottom: 12px;
    color: #333;
  }

  .ai-related-products__empty-text-{{ ai_gen_id }} {
    font-size: 16px;
    line-height: 1.5;
  }

  .ai-related-products__loading-{{ ai_gen_id }} {
    grid-column: 1 / -1;
    text-align: center;
    padding: 40px 20px;
    color: #666;
  }

  @media screen and (max-width: 749px) {
    .ai-related-products__grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_mobile }}, 1fr);
      gap: {{ block.settings.grid_gap | times: 0.75 }}px;
    }

    .ai-related-products__heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.85 }}px;
    }

    .ai-related-products__content-{{ ai_gen_id }} {
      padding: {{ block.settings.card_padding | times: 0.75 }}px;
    }
  }

  @media screen and (min-width: 750px) and (max-width: 989px) {
    .ai-related-products__grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_tablet }}, 1fr);
    }
  }
{% endstyle %}

<related-products-{{ ai_gen_id }}
  class="ai-related-products-{{ ai_gen_id }}"
  data-product-id="{{ product.id }}"
  data-limit="{{ block.settings.products_limit }}"
  data-use-search-discovery="{{ block.settings.use_search_discovery }}"
  data-intent="{{ block.settings.recommendation_intent }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-related-products__container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h2 class="ai-related-products__heading-{{ ai_gen_id }}">
        {{ block.settings.heading }}
      </h2>
    {% endif %}<div class="ai-related-products__grid-{{ ai_gen_id }}" id="related-products-grid-{{ ai_gen_id }}">
      <div class="ai-related-products__loading-{{ ai_gen_id }}">
        Loading related products...
      </div></div>
  </div>
</related-products-{{ ai_gen_id }}>

<script>
  (function() {
    class RelatedProducts{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.productId = this.dataset.productId;
        this.limit = parseInt(this.dataset.limit);
        this.useSearchDiscovery = this.dataset.useSearchDiscovery === 'true';
        this.intent = this.dataset.intent;
        this.grid = this.querySelector('#related-products-grid-{{ ai_gen_id }}');}

      connectedCallback() {
        this.fetchRelatedProducts();
      }

      async fetchRelatedProducts() {
        if (this.useSearchDiscovery) {
          await this.fetchFromSearchDiscovery();
        } else {
          await this.fetchFromProductRecommendations();
        }
      }

      async fetchFromSearchDiscovery() {
        try {
          const url = `/recommendations/products.json?product_id=${this.productId}&limit=${this.limit}&intent=${this.intent}`;
          const response = await fetch(url);
          
          if (!response.ok) {
            throw new Error('Search & Discovery API not available');
          }
          
          const data = await response.json();
          
          if (data.products && data.products.length > 0) {
            this.renderProducts(data.products);
          } else {
            await this.fetchFallbackProducts();
          }
        } catch (error) {
          console.warn('Search & Discovery unavailable, falling back to product recommendations:', error);
          await this.fetchFromProductRecommendations();
        }
      }

      async fetchFromProductRecommendations() {
        try {
          const url = `/recommendations/products.json?product_id=${this.productId}&limit=${this.limit}`;
          const response = await fetch(url);
          const data = await response.json();
          
          if (data.products && data.products.length > 0) {
            this.renderProducts(data.products);
          } else {
            await this.fetchFallbackProducts();
          }
        } catch (error) {
          console.error('Product recommendations failed:', error);
          await this.fetchFallbackProducts();
        }
      }

      async fetchFallbackProducts() {
        try {
          const response = await fetch('/products.json?limit=' + (this.limit + 5));
          const data = await response.json();
          
          let products = data.products.filter(product => 
            product.id.toString() !== this.productId
          );
          
          products = products.slice(0, this.limit);
          
          if (products.length > 0) {
            this.renderProducts(products);
          } else {
            this.renderEmptyState();
          }
        } catch (error) {
          console.error('Fallback products failed:', error);
          this.renderEmptyState();
        }
      }

      renderProducts(products) {
        if (products.length === 0) {
          this.renderEmptyState();
          return;
        }

        this.grid.innerHTML = products.map(product => {
          const image = product.featured_image || (product.images && product.images[0]);
          const variant = product.variants ? product.variants[0] : product;
          const price = this.formatMoney(variant.price);
          const comparePrice = variant.compare_at_price ? 
            this.formatMoney(variant.compare_at_price) : null;

          return `
            <a href="/products/${product.handle}" class="ai-related-products__item-{{ ai_gen_id }}">
              <div class="ai-related-products__image-wrapper-{{ ai_gen_id }}">
                ${image ? 
                  `<img 
                    src="${image}?width=400" 
                    alt="${this.escapeHtml(product.title)}"
                    class="ai-related-products__image-{{ ai_gen_id }}"loading="lazy"
                    width="400"
                    height="400"
                  >` :
                  `<div class="ai-related-products__image-placeholder-{{ ai_gen_id }}">
                    ${'{{ "product-1" | placeholder_svg_tag }}'}
                  </div>`
                }
              </div>
              <div class="ai-related-products__content-{{ ai_gen_id }}">
                ${product.vendor ? `<div class="ai-related-products__vendor-{{ ai_gen_id }}">${this.escapeHtml(product.vendor)}</div>` : ''}
                <div class="ai-related-products__title-{{ ai_gen_id }}">
                  ${this.escapeHtml(product.title)}
                </div>
                <div class="ai-related-products__price-{{ ai_gen_id }}">
                  ${comparePrice ? `<span class="ai-related-products__price-compare-{{ ai_gen_id }}">${comparePrice}</span>` : ''}
                  ${price}
                </div>
              </div>
            </a>
          `;
        }).join('');
      }

      renderEmptyState() {
        this.grid.innerHTML = `
          <div class="ai-related-products__empty-{{ ai_gen_id }}">
            <div class="ai-related-products__empty-title-{{ ai_gen_id }}">
              No related products found
            </div>
            <div class="ai-related-products__empty-text-{{ ai_gen_id }}">
              Check back later for product recommendations
            </div>
          </div>
        `;
      }

      formatMoney(cents) {
        return (cents / 100).toLocaleString('en-US', {
          style: 'currency',
          currency: 'USD'
        });
      }

      escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
      }
    }

    customElements.define('related-products-{{ ai_gen_id }}', RelatedProducts{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Related products",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "You might also like"
    },
    {
      "type": "range",
      "id": "products_limit",
      "min": 2,
      "max": 12,
      "step": 1,
      "label": "Products to show",
      "default": 4
    },
    {
      "type": "header",
      "content": "Recommendation settings"
    },
    {
      "type": "checkbox",
      "id": "use_search_discovery",
      "label": "Use Search & Discovery",
      "default": true
    },
    {
      "type": "select",
      "id": "recommendation_intent",
      "label": "Recommendation intent",
      "options": [
        {"value": "related", "label": "Related products"},
        {"value": "complementary", "label": "Complementary products"}
      ],
      "default": "related"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 2,
      "max": 6,
      "step": 1,
      "label": "Columns on desktop",
      "default": 4
    },
    {
      "type": "select",
      "id": "columns_tablet",
      "label": "Columns on tablet",
      "options": [
        {"value": "2", "label": "2"},
        {"value": "3", "label": "3"}
      ],
      "default": "3"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        {"value": "1", "label": "1"},
        {"value": "2", "label": "2"}
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Grid gap",
      "default": 20
    },
    {
      "type": "select",
      "id": "image_aspect_ratio",
      "label": "Image aspect ratio",
      "options": [
        {"value": "1/1", "label": "Square"},
        {"value": "4/3", "label": "Landscape"},
        {"value": "3/4", "label": "Portrait"}
      ],
      "default": "1/1"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_border_color",
      "label": "Card border",
      "default": "#e5e5e5"
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Product title",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "product_title_hover_color",
      "label": "Product title hover",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "vendor_color",
      "label": "Vendor",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "compare_price_color",
      "label": "Compare price",
      "default": "#999999"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {"value": "left", "label": "Left"},
        {"value": "center", "label": "Center"},
        {"value": "right", "label": "Right"}
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Product title size",
      "default": 16
    },
    {
      "type": "range",
      "id": "vendor_size",
      "min": 10,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Vendor size",
      "default": 12
    },
    {
      "type": "range",
      "id": "price_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Price size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "heading_spacing",
      "min": 10,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading spacing",
      "default": 30
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Card padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "hover_lift",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Hover lift effect",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Related products"
    }
  ]
}
{% endschema %}