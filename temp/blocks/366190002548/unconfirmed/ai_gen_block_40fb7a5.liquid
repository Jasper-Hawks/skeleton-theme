{% doc %}
  @prompt
    Make full-width carousel of related products from the "Search And Discovery" App, Center it in the section and fix error, connect it to search and discovery

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-related-products-carousel-{{ ai_gen_id }} {
    width: 100%;
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.section_padding }}px 0;
  }

  .ai-related-products-carousel__container-{{ ai_gen_id }} {
    max-width: {{ block.settings.max_width }}px;
    margin: 0 auto;
    padding: 0 {{ block.settings.horizontal_padding }}px;
  }

  .ai-related-products-carousel__header-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: {{ block.settings.heading_margin }}px;
  }

  .ai-related-products-carousel__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    margin: 0;
    font-weight: 600;
  }

  .ai-related-products-carousel__wrapper-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-related-products-carousel__track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    gap: {{ block.settings.product_gap }}px;
  }

  .ai-related-products-carousel__slide-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - ({{ block.settings.products_per_row | minus: 1 }} * {{ block.settings.product_gap }}px)) / {{ block.settings.products_per_row }});
    min-width: 0;
  }

  .ai-related-products-carousel__product-{{ ai_gen_id }} {
    background-color: {{ block.settings.product_card_bg }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    display: block;
    transition: transform 0.2s ease;
  }

  .ai-related-products-carousel__product-{{ ai_gen_id }}:hover {
    transform: translateY(-2px);
  }

  .ai-related-products-carousel__image-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    overflow: hidden;
  }

  .ai-related-products-carousel__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-related-products-carousel__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-related-products-carousel__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-related-products-carousel__content-{{ ai_gen_id }} {
    padding: {{ block.settings.card_padding }}px;
  }

  .ai-related-products-carousel__title-product-{{ ai_gen_id }} {
    font-size: {{ block.settings.product_title_size }}px;
    color: {{ block.settings.product_title_color }};
    margin: 0 0 8px 0;
    font-weight: 500;
    line-height: 1.3;
  }

  .ai-related-products-carousel__price-{{ ai_gen_id }} {
    font-size: {{ block.settings.product_price_size }}px;
    color: {{ block.settings.product_price_color }};
    font-weight: 600;
  }

  .ai-related-products-carousel__nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: {{ block.settings.nav_button_bg }};
    color: {{ block.settings.nav_button_color }};
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
    transition: all 0.2s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .ai-related-products-carousel__nav-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_bg }};
    transform: translateY(-50%) scale(1.1);
  }

  .ai-related-products-carousel__nav-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
    transform: translateY(-50%) scale(1);
  }

  .ai-related-products-carousel__nav--prev-{{ ai_gen_id }} {
    left: 10px;
  }

  .ai-related-products-carousel__nav--next-{{ ai_gen_id }} {
    right: 10px;
  }

  .ai-related-products-carousel__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: #666;
  }

  .ai-related-products-carousel__empty-title-{{ ai_gen_id }} {
    font-size: 18px;
    margin-bottom: 8px;
    color: #999;
  }

  .ai-related-products-carousel__empty-text-{{ ai_gen_id }} {
    font-size: 14px;
    color: #999;
  }

  @media screen and (max-width: 749px) {
    .ai-related-products-carousel__slide-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - ({{ block.settings.products_per_row_mobile | minus: 1 }} * {{ block.settings.product_gap }}px)) / {{ block.settings.products_per_row_mobile }});
    }

    .ai-related-products-carousel__nav-{{ ai_gen_id }} {
      display: none;
    }

    .ai-related-products-carousel__track-{{ ai_gen_id }} {
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      -webkit-overflow-scrolling: touch;
    }

    .ai-related-products-carousel__slide-{{ ai_gen_id }} {
      scroll-snap-align: start;
    }
  }
{% endstyle %}

<related-products-carousel-{{ ai_gen_id }}
  class="ai-related-products-carousel-{{ ai_gen_id }}"
  data-products-per-row="{{ block.settings.products_per_row }}"
  data-products-per-row-mobile="{{ block.settings.products_per_row_mobile }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-related-products-carousel__container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <div class="ai-related-products-carousel__header-{{ ai_gen_id }}">
        <h2 class="ai-related-products-carousel__title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
      </div>
    {% endif %}

    {% liquid
      assign related_products = product.metafields.shopify.related_products.value
      unless related_products and related_products.size > 0
        assign related_products = product.metafields.custom.related_products.value
      endunless
      unless related_products and related_products.size > 0
        assign related_products = collections[product.type].products
      endunless
      unless related_products and related_products.size > 0
        assign related_products = collections.all.products
      endunless
    %}

    {% assign filtered_products = '' | split: ',' %}
    {% for related_product in related_products %}
      {% unless related_product.id == product.id %}
        {% assign filtered_products = filtered_products | concat: related_product %}
      {% endunless %}
      {% if filtered_products.size >= block.settings.max_products %}
        {% break %}
      {% endif %}
    {% endfor %}

    {% if filtered_products.size > 0 %}
      <div class="ai-related-products-carousel__wrapper-{{ ai_gen_id }}">
        <button
          class="ai-related-products-carousel__nav-{{ ai_gen_id }} ai-related-products-carousel__nav--prev-{{ ai_gen_id }}"
          aria-label="Previous products"
          disabled
        >
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M10 12L6 8L10 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>

        <div class="ai-related-products-carousel__track-{{ ai_gen_id }}">
          {% for related_product in filtered_products %}
            <div class="ai-related-products-carousel__slide-{{ ai_gen_id }}">
              <a href="{{ related_product.url }}" class="ai-related-products-carousel__product-{{ ai_gen_id }}">
                <div class="ai-related-products-carousel__image-container-{{ ai_gen_id }}">
                  {% if related_product.featured_image %}
                    <img
                      src="{{ related_product.featured_image | image_url: width: 400 }}"
                      alt="{{ related_product.featured_image.alt | escape }}"
                      class="ai-related-products-carousel__image-{{ ai_gen_id }}"
                      loading="lazy"
                      width="400"
                      height="400"
                    >
                  {% else %}
                    <div class="ai-related-products-carousel__image-placeholder-{{ ai_gen_id }}">
                      {{ 'product-1' | placeholder_svg_tag }}
                    </div>
                  {% endif %}
                </div>
                <div class="ai-related-products-carousel__content-{{ ai_gen_id }}">
                  <h3 class="ai-related-products-carousel__title-product-{{ ai_gen_id }}">{{ related_product.title }}</h3>
                  <div class="ai-related-products-carousel__price-{{ ai_gen_id }}">
                    {% if related_product.compare_at_price > related_product.price %}
                      <span style="text-decoration: line-through; opacity: 0.7; margin-right: 8px;">
                        {{ related_product.compare_at_price | money }}
                      </span>
                    {% endif %}
                    {{ related_product.price | money }}
                  </div>
                </div>
              </a>
            </div>
          {% endfor %}
        </div>

        <button
          class="ai-related-products-carousel__nav-{{ ai_gen_id }} ai-related-products-carousel__nav--next-{{ ai_gen_id }}"
          aria-label="Next products"
        >
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M6 4L10 8L6 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>
    {% else %}
      <div class="ai-related-products-carousel__empty-state-{{ ai_gen_id }}">
        <h3 class="ai-related-products-carousel__empty-title-{{ ai_gen_id }}">No related products found</h3>
        <p class="ai-related-products-carousel__empty-text-{{ ai_gen_id }}">
          Install and configure the Search & Discovery app to show AI-powered product recommendations
        </p>
      </div>
    {% endif %}
  </div>
</related-products-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class RelatedProductsCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.productsPerRow = parseInt(this.dataset.productsPerRow) || 4;
        this.productsPerRowMobile = parseInt(this.dataset.productsPerRowMobile) || 2;
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-related-products-carousel__track-{{ ai_gen_id }}');
        this.slides = this.querySelectorAll('.ai-related-products-carousel__slide-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-related-products-carousel__nav--prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-related-products-carousel__nav--next-{{ ai_gen_id }}');

        if (!this.track || this.slides.length === 0) return;

        this.setupEventListeners();
        this.updateNavigation();
      }

      setupEventListeners() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.goToPrevious());
        }
        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.goToNext());
        }

        window.addEventListener('resize', () => this.updateNavigation());
      }

      getCurrentProductsPerRow() {
        return window.innerWidth <= 749 ? this.productsPerRowMobile : this.productsPerRow;
      }

      getMaxIndex() {
        const currentProductsPerRow = this.getCurrentProductsPerRow();
        return Math.max(0, this.slides.length - currentProductsPerRow);
      }

      goToPrevious() {
        const currentProductsPerRow = this.getCurrentProductsPerRow();
        this.currentIndex = Math.max(0, this.currentIndex - currentProductsPerRow);
        this.updateCarousel();
      }

      goToNext() {
        const currentProductsPerRow = this.getCurrentProductsPerRow();
        const maxIndex = this.getMaxIndex();
        this.currentIndex = Math.min(maxIndex, this.currentIndex + currentProductsPerRow);
        this.updateCarousel();
      }

      updateCarousel() {
        if (!this.track || this.slides.length === 0) return;

        const slideWidth = this.slides[0].offsetWidth;
        const gap = parseInt(getComputedStyle(this.track).gap) || 0;
        const translateX = -(this.currentIndex * (slideWidth + gap));
        
        this.track.style.transform = `translateX(${translateX}px)`;
        this.updateNavigation();
      }

      updateNavigation() {
        if (!this.prevButton || !this.nextButton) return;

        const maxIndex = this.getMaxIndex();
        
        this.prevButton.disabled = this.currentIndex <= 0;
        this.nextButton.disabled = this.currentIndex >= maxIndex;

        if (this.currentIndex > maxIndex) {
          this.currentIndex = maxIndex;
          this.updateCarousel();
        }
      }
    }

    customElements.define('related-products-carousel-{{ ai_gen_id }}', RelatedProductsCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Related products carousel",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Recommended for you"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 4,
      "max": 20,
      "step": 2,
      "label": "Maximum products to show",
      "default": 12
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 800,
      "max": 1600,
      "step": 50,
      "unit": "px",
      "label": "Maximum section width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "products_per_row",
      "min": 2,
      "max": 6,
      "step": 1,
      "label": "Products per row on desktop",
      "default": 4
    },
    {
      "type": "select",
      "id": "products_per_row_mobile",
      "label": "Products per row on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "range",
      "id": "product_gap",
      "min": 10,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "Gap between products",
      "default": 20
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 20,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Section padding",
      "default": 50
    },
    {
      "type": "range",
      "id": "horizontal_padding",
      "min": 10,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Horizontal padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "heading_margin",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Heading bottom margin",
      "default": 30
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "product_card_bg",
      "label": "Product card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Product title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "product_price_color",
      "label": "Product price color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_bg",
      "label": "Navigation button background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_hover_bg",
      "label": "Navigation button hover background",
      "default": "#f5f5f5"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 28
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Product title size",
      "default": 16
    },
    {
      "type": "range",
      "id": "product_price_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Product price size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Card style"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Card content padding",
      "default": 16
    }
  ],
  "presets": [
    {
      "name": "Related products carousel"
    }
  ]
}
{% endschema %}