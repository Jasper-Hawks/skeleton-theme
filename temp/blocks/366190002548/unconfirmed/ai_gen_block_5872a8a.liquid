{% doc %}
  @prompt
    Make a animated carousel of related products from the search and discovery app. Make it as wide as the section.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-related-products-carousel-{{ ai_gen_id }} {
    width: 100%;
    overflow: hidden;
    position: relative;
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.section_padding }}px 0;
  }

  .ai-related-products-carousel__container-{{ ai_gen_id }} {
    max-width: 100%;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-related-products-carousel__header-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: 30px;
  }

  .ai-related-products-carousel__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    margin: 0;
    font-weight: 600;
  }

  .ai-related-products-carousel__wrapper-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
    border-radius: {{ block.settings.carousel_border_radius }}px;
  }

  .ai-related-products-carousel__track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.5s ease;
    gap: {{ block.settings.product_gap }}px;
  }

  .ai-related-products-carousel__slide-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - ({{ block.settings.products_per_view | minus: 1 }} * {{ block.settings.product_gap }}px)) / {{ block.settings.products_per_view }});
    background-color: {{ block.settings.product_card_bg }};
    border-radius: {{ block.settings.product_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .ai-related-products-carousel__slide-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .ai-related-products-carousel__image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    overflow: hidden;
  }

  .ai-related-products-carousel__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-related-products-carousel__slide-{{ ai_gen_id }}:hover .ai-related-products-carousel__image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-related-products-carousel__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-related-products-carousel__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-related-products-carousel__content-{{ ai_gen_id }} {
    padding: 16px;
  }

  .ai-related-products-carousel__product-title-{{ ai_gen_id }} {
    font-size: 16px;
    font-weight: 500;
    color: {{ block.settings.product_title_color }};
    margin: 0 0 8px;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .ai-related-products-carousel__product-price-{{ ai_gen_id }} {
    font-size: 18px;
    font-weight: 600;
    color: {{ block.settings.product_price_color }};
    margin: 0;
  }

  .ai-related-products-carousel__product-compare-price-{{ ai_gen_id }} {
    font-size: 14px;
    color: #999;
    text-decoration: line-through;
    margin-left: 8px;
  }

  .ai-related-products-carousel__nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: {{ block.settings.nav_button_color }};
    color: {{ block.settings.nav_button_text_color }};
    border: none;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }

  .ai-related-products-carousel__nav-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_color }};
    transform: translateY(-50%) scale(1.1);
  }

  .ai-related-products-carousel__nav-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: translateY(-50%) scale(1);
  }

  .ai-related-products-carousel__nav--prev-{{ ai_gen_id }} {
    left: -25px;
  }

  .ai-related-products-carousel__nav--next-{{ ai_gen_id }} {
    right: -25px;
  }

  .ai-related-products-carousel__nav-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
  }

  .ai-related-products-carousel__dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 20px;
  }

  .ai-related-products-carousel__dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: none;
    background-color: #ddd;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-related-products-carousel__dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.nav_button_color }};
  }

  .ai-related-products-carousel__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: #666;
  }

  .ai-related-products-carousel__empty-title-{{ ai_gen_id }} {
    font-size: 24px;
    margin: 0 0 12px;
    color: #999;
  }

  .ai-related-products-carousel__empty-text-{{ ai_gen_id }} {
    font-size: 16px;
    margin: 0;
  }

  @media screen and (max-width: 990px) {
    .ai-related-products-carousel__slide-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - ({{ block.settings.products_per_view_tablet | minus: 1 }} * {{ block.settings.product_gap }}px)) / {{ block.settings.products_per_view_tablet }});
    }
  }

  @media screen and (max-width: 749px) {
    .ai-related-products-carousel__slide-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - ({{ block.settings.products_per_view_mobile | minus: 1 }} * {{ block.settings.product_gap }}px)) / {{ block.settings.products_per_view_mobile }});
    }

    .ai-related-products-carousel__nav--prev-{{ ai_gen_id }} {
      left: -15px;
    }

    .ai-related-products-carousel__nav--next-{{ ai_gen_id }} {
      right: -15px;
    }

    .ai-related-products-carousel__container-{{ ai_gen_id }} {
      padding: 0 15px;
    }
  }
{% endstyle %}

<related-products-carousel-{{ ai_gen_id }}
  class="ai-related-products-carousel-{{ ai_gen_id }}"
  data-autoplay="{{ block.settings.autoplay }}"
  data-autoplay-speed="{{ block.settings.autoplay_speed }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-related-products-carousel__container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <div class="ai-related-products-carousel__header-{{ ai_gen_id }}">
        <h2 class="ai-related-products-carousel__title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
      </div>
    {% endif %}

    {% assign related_products = search.terms | default: product.title | search: 'product' %}
    {% if related_products.results.size > 0 %}
      <div class="ai-related-products-carousel__wrapper-{{ ai_gen_id }}">
        <div class="ai-related-products-carousel__track-{{ ai_gen_id }}" data-track>
          {% for product in related_products.results limit: block.settings.max_products %}
            <div class="ai-related-products-carousel__slide-{{ ai_gen_id }}">
              <a href="{{ product.url }}" class="ai-related-products-carousel__link-{{ ai_gen_id }}">
                <div class="ai-related-products-carousel__image-wrapper-{{ ai_gen_id }}">
                  {% if product.featured_image %}
                    <img
                      src="{{ product.featured_image | image_url: width: 400 }}"
                      alt="{{ product.featured_image.alt | escape }}"
                      class="ai-related-products-carousel__image-{{ ai_gen_id }}"
                      loading="lazy"
                      width="400"
                      height="400"
                    >
                  {% else %}
                    <div class="ai-related-products-carousel__image-placeholder-{{ ai_gen_id }}">
                      {{ 'product-1' | placeholder_svg_tag }}
                    </div>
                  {% endif %}
                </div>
                <div class="ai-related-products-carousel__content-{{ ai_gen_id }}">
                  <h3 class="ai-related-products-carousel__product-title-{{ ai_gen_id }}">{{ product.title }}</h3>
                  <div class="ai-related-products-carousel__product-price-{{ ai_gen_id }}">
                    {{ product.price | money }}
                    {% if product.compare_at_price > product.price %}
                      <span class="ai-related-products-carousel__product-compare-price-{{ ai_gen_id }}">
                        {{ product.compare_at_price | money }}
                      </span>
                    {% endif %}
                  </div>
                </div>
              </a>
            </div>
          {% endfor %}
        </div>

        {% if related_products.results.size > block.settings.products_per_view %}
          <button
            class="ai-related-products-carousel__nav-{{ ai_gen_id }} ai-related-products-carousel__nav--prev-{{ ai_gen_id }}"
            data-prev
            aria-label="Previous products"
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="15,18 9,12 15,6"></polyline>
            </svg>
          </button>

          <button
            class="ai-related-products-carousel__nav-{{ ai_gen_id }} ai-related-products-carousel__nav--next-{{ ai_gen_id }}"
            data-next
            aria-label="Next products"
          >
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="9,18 15,12 9,6"></polyline>
            </svg>
          </button>
        {% endif %}
      </div>

      {% if block.settings.show_dots and related_products.results.size > block.settings.products_per_view %}
        <div class="ai-related-products-carousel__dots-{{ ai_gen_id }}" data-dots></div>
      {% endif %}
    {% else %}
      <div class="ai-related-products-carousel__empty-state-{{ ai_gen_id }}">
        <h3 class="ai-related-products-carousel__empty-title-{{ ai_gen_id }}">No related products found</h3>
        <p class="ai-related-products-carousel__empty-text-{{ ai_gen_id }}">
          Install and configure the Search & Discovery app to show related products here.
        </p>
      </div>
    {% endif %}
  </div>
</related-products-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class RelatedProductsCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.autoplayInterval = null;
      }

      connectedCallback() {
        this.track = this.querySelector('[data-track]');
        this.prevButton = this.querySelector('[data-prev]');
        this.nextButton = this.querySelector('[data-next]');
        this.dotsContainer = this.querySelector('[data-dots]');
        this.slides = this.querySelectorAll('.ai-related-products-carousel__slide-{{ ai_gen_id }}');
        
        this.autoplay = this.dataset.autoplay === 'true';
        this.autoplaySpeed = parseInt(this.dataset.autoplaySpeed) * 1000;

        this.productsPerView = this.getProductsPerView();
        this.maxSlides = Math.max(0, this.slides.length - this.productsPerView);

        this.setupEventListeners();
        this.createDots();
        this.updateCarousel();

        if (this.autoplay && this.maxSlides > 0) {
          this.startAutoplay();
        }

        window.addEventListener('resize', () => {
          this.productsPerView = this.getProductsPerView();
          this.maxSlides = Math.max(0, this.slides.length - this.productsPerView);
          this.currentSlide = Math.min(this.currentSlide, this.maxSlides);
          this.updateCarousel();
          this.createDots();
        });
      }

      getProductsPerView() {
        if (window.innerWidth <= 749) {
          return {{ block.settings.products_per_view_mobile }};
        } else if (window.innerWidth <= 990) {
          return {{ block.settings.products_per_view_tablet }};
        }
        return {{ block.settings.products_per_view }};
      }

      setupEventListeners() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.prevSlide());
        }
        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.nextSlide());
        }

        this.addEventListener('mouseenter', () => this.stopAutoplay());
        this.addEventListener('mouseleave', () => {
          if (this.autoplay && this.maxSlides > 0) {
            this.startAutoplay();
          }
        });
      }

      createDots() {
        if (!this.dotsContainer || this.maxSlides === 0) return;

        this.dotsContainer.innerHTML = '';
        for (let i = 0; i <= this.maxSlides; i++) {
          const dot = document.createElement('button');
          dot.className = `ai-related-products-carousel__dot-{{ ai_gen_id }} ${i === this.currentSlide ? 'active' : ''}`;
          dot.addEventListener('click', () => this.goToSlide(i));
          dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
          this.dotsContainer.appendChild(dot);
        }
      }

      updateCarousel() {
        if (!this.track) return;

        const slideWidth = 100 / this.productsPerView;
        const translateX = -(this.currentSlide * slideWidth);
        this.track.style.transform = `translateX(${translateX}%)`;

        if (this.prevButton) {
          this.prevButton.disabled = this.currentSlide === 0;
        }
        if (this.nextButton) {
          this.nextButton.disabled = this.currentSlide >= this.maxSlides;
        }

        this.updateDots();
      }

      updateDots() {
        const dots = this.querySelectorAll('.ai-related-products-carousel__dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }

      prevSlide() {
        if (this.currentSlide > 0) {
          this.currentSlide--;
          this.updateCarousel();
        }
      }

      nextSlide() {
        if (this.currentSlide < this.maxSlides) {
          this.currentSlide++;
          this.updateCarousel();
        }
      }

      goToSlide(index) {
        this.currentSlide = Math.max(0, Math.min(index, this.maxSlides));
        this.updateCarousel();
      }

      startAutoplay() {
        this.stopAutoplay();
        this.autoplayInterval = setInterval(() => {
          if (this.currentSlide >= this.maxSlides) {
            this.currentSlide = 0;
          } else {
            this.currentSlide++;
          }
          this.updateCarousel();
        }, this.autoplaySpeed);
      }

      stopAutoplay() {
        if (this.autoplayInterval) {
          clearInterval(this.autoplayInterval);
          this.autoplayInterval = null;
        }
      }

      disconnectedCallback() {
        this.stopAutoplay();
      }
    }

    customElements.define('related-products-carousel-{{ ai_gen_id }}', RelatedProductsCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Related products carousel",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Related products"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 4,
      "max": 20,
      "step": 1,
      "label": "Maximum products to show",
      "default": 12
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "products_per_view",
      "min": 2,
      "max": 6,
      "step": 1,
      "label": "Products per view (desktop)",
      "default": 4
    },
    {
      "type": "range",
      "id": "products_per_view_tablet",
      "min": 2,
      "max": 4,
      "step": 1,
      "label": "Products per view (tablet)",
      "default": 3
    },
    {
      "type": "range",
      "id": "products_per_view_mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "label": "Products per view (mobile)",
      "default": 2
    },
    {
      "type": "range",
      "id": "product_gap",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Gap between products",
      "default": 20
    },
    {
      "type": "header",
      "content": "Autoplay"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable autoplay",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 2,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Autoplay speed",
      "default": 4
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show navigation dots",
      "default": true
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "product_card_bg",
      "label": "Product card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Product title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "product_price_color",
      "label": "Product price color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_text_color",
      "label": "Navigation button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Navigation button hover color",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "carousel_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Carousel border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "product_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Product card border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Related products carousel"
    }
  ]
}
{% endschema %}