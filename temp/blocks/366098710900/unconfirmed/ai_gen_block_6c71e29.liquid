{% doc %}
  @prompt
    Create recommended products carousel that is mobile friend and displays all products that are recommended from the search and discovery app. Then make a carousel displaying all collections. Make it all mobile friendly

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-recommendations-carousel-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding }}px 0;
    background-color: {{ block.settings.background_color }};
  }

  .ai-recommendations-carousel__container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-recommendations-carousel__heading-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.text_color }};
    text-align: {{ block.settings.heading_alignment }};
    margin: 0 0 {{ block.settings.heading_margin }}px;
  }

  .ai-recommendations-carousel__subheading-{{ ai_gen_id }} {
    font-size: {{ block.settings.subheading_size }}px;
    color: {{ block.settings.text_color }};
    text-align: {{ block.settings.heading_alignment }};
    margin: 0 0 {{ block.settings.content_spacing }}px;
    opacity: 0.8;
  }

  .ai-recommendations-carousel__wrapper-{{ ai_gen_id }} {
    position: relative;
    margin-bottom: {{ block.settings.section_spacing }}px;
  }

  .ai-recommendations-carousel__track-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.item_spacing }}px;
    overflow-x: auto;
    scroll-behavior: smooth;
    padding-bottom: 10px;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .ai-recommendations-carousel__track-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-recommendations-carousel__item-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.item_width_mobile }}px;
    background-color: {{ block.settings.card_background_color }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
  }

  .ai-recommendations-carousel__item-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
  }

  .ai-recommendations-carousel__image-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.image_height_mobile }}px;
    overflow: hidden;
  }

  .ai-recommendations-carousel__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-recommendations-carousel__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-recommendations-carousel__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-recommendations-carousel__content-{{ ai_gen_id }} {
    padding: {{ block.settings.card_padding }}px;
  }

  .ai-recommendations-carousel__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.item_title_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0 0 8px;
    font-weight: 600;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .ai-recommendations-carousel__price-{{ ai_gen_id }} {
    font-size: {{ block.settings.price_size }}px;
    color: {{ block.settings.price_color }};
    font-weight: 600;
    margin-bottom: 8px;
  }

  .ai-recommendations-carousel__description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    color: {{ block.settings.text_color }};
    opacity: 0.7;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .ai-recommendations-carousel__nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: {{ block.settings.nav_button_color }};
    color: {{ block.settings.nav_button_text_color }};
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    transition: background-color 0.3s ease;
    z-index: 2;
  }

  .ai-recommendations-carousel__nav-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_color }};
  }

  .ai-recommendations-carousel__nav--prev-{{ ai_gen_id }} {
    left: -20px;
  }

  .ai-recommendations-carousel__nav--next-{{ ai_gen_id }} {
    right: -20px;
  }

  .ai-recommendations-carousel__nav-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-recommendations-carousel__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: {{ block.settings.text_color }};
    opacity: 0.6;
  }

  .ai-recommendations-carousel__empty-state-icon-{{ ai_gen_id }} {
    width: 60px;
    height: 60px;
    margin: 0 auto 16px;
    opacity: 0.3;
  }

  @media screen and (min-width: 750px) {
    .ai-recommendations-carousel__item-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.item_width_desktop }}px;
    }

    .ai-recommendations-carousel__image-container-{{ ai_gen_id }} {
      height: {{ block.settings.image_height_desktop }}px;
    }

    .ai-recommendations-carousel__nav--prev-{{ ai_gen_id }} {
      left: -60px;
    }

    .ai-recommendations-carousel__nav--next-{{ ai_gen_id }} {
      right: -60px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-recommendations-carousel__nav-{{ ai_gen_id }} {
      display: none;
    }
  }
{% endstyle %}

<recommendations-carousel-{{ ai_gen_id }}
  class="ai-recommendations-carousel-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-recommendations-carousel__container-{{ ai_gen_id }}">
    {% if block.settings.products_heading != blank %}
      <h2 class="ai-recommendations-carousel__heading-{{ ai_gen_id }}">
        {{ block.settings.products_heading }}
      </h2>
    {% endif %}

    {% if block.settings.products_subheading != blank %}
      <div class="ai-recommendations-carousel__subheading-{{ ai_gen_id }}">
        {{ block.settings.products_subheading }}
      </div>
    {% endif %}

    <div class="ai-recommendations-carousel__wrapper-{{ ai_gen_id }}">
      {% if recommendations.products.size > 0 %}
        <button
          class="ai-recommendations-carousel__nav-{{ ai_gen_id }} ai-recommendations-carousel__nav--prev-{{ ai_gen_id }}"
          aria-label="Previous products"
          data-carousel="products"
          data-direction="prev"
        >
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
            <path d="M10 12L6 8L10 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>

        <div 
          class="ai-recommendations-carousel__track-{{ ai_gen_id }}"
          data-track="products"
        >
          {% for product in recommendations.products limit: block.settings.products_limit %}
            <div class="ai-recommendations-carousel__item-{{ ai_gen_id }}">
              <a href="{{ product.url }}" class="ai-recommendations-carousel__link-{{ ai_gen_id }}">
                <div class="ai-recommendations-carousel__image-container-{{ ai_gen_id }}">
                  {% if product.featured_image %}
                    <img
                      src="{{ product.featured_image | image_url: width: 400 }}"
                      alt="{{ product.featured_image.alt | escape }}"
                      class="ai-recommendations-carousel__image-{{ ai_gen_id }}"
                      loading="lazy"
                      width="400"
                      height="400"
                    >
                  {% else %}
                    <div class="ai-recommendations-carousel__image-placeholder-{{ ai_gen_id }}">
                      {{ 'product-1' | placeholder_svg_tag }}
                    </div>
                  {% endif %}
                </div>
                <div class="ai-recommendations-carousel__content-{{ ai_gen_id }}">
                  <h3 class="ai-recommendations-carousel__title-{{ ai_gen_id }}">
                    {{ product.title }}
                  </h3>
                  <div class="ai-recommendations-carousel__price-{{ ai_gen_id }}">
                    {{ product.price | money }}
                  </div>
                  {% if block.settings.show_product_description and product.description != blank %}
                    <div class="ai-recommendations-carousel__description-{{ ai_gen_id }}">
                      {{ product.description | strip_html | truncate: 100 }}
                    </div>
                  {% endif %}
                </div>
              </a>
            </div>
          {% endfor %}
        </div>

        <button
          class="ai-recommendations-carousel__nav-{{ ai_gen_id }} ai-recommendations-carousel__nav--next-{{ ai_gen_id }}"
          aria-label="Next products"
          data-carousel="products"
          data-direction="next"
        >
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
            <path d="M6 4L10 8L6 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      {% else %}
        <div class="ai-recommendations-carousel__empty-state-{{ ai_gen_id }}">
          <div class="ai-recommendations-carousel__empty-state-icon-{{ ai_gen_id }}">
            {{ 'product-1' | placeholder_svg_tag }}
          </div>
          <p>No recommended products available yet. The Search & Discovery app will populate recommendations based on customer behavior.</p>
        </div>
      {% endif %}
    </div>

    {% if block.settings.collections_heading != blank %}
      <h2 class="ai-recommendations-carousel__heading-{{ ai_gen_id }}">
        {{ block.settings.collections_heading }}
      </h2>
    {% endif %}

    {% if block.settings.collections_subheading != blank %}
      <div class="ai-recommendations-carousel__subheading-{{ ai_gen_id }}">
        {{ block.settings.collections_subheading }}
      </div>
    {% endif %}

    <div class="ai-recommendations-carousel__wrapper-{{ ai_gen_id }}">
      {% assign collections_to_show = collections | where: 'products_count', '>', 0 %}
      {% if collections_to_show.size > 0 %}
        <button
          class="ai-recommendations-carousel__nav-{{ ai_gen_id }} ai-recommendations-carousel__nav--prev-{{ ai_gen_id }}"
          aria-label="Previous collections"
          data-carousel="collections"
          data-direction="prev"
        >
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
            <path d="M10 12L6 8L10 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>

        <div 
          class="ai-recommendations-carousel__track-{{ ai_gen_id }}"
          data-track="collections"
        >
          {% for collection in collections_to_show limit: block.settings.collections_limit %}
            {% unless collection.handle == 'frontpage' %}
              <div class="ai-recommendations-carousel__item-{{ ai_gen_id }}">
                <a href="{{ collection.url }}" class="ai-recommendations-carousel__link-{{ ai_gen_id }}">
                  <div class="ai-recommendations-carousel__image-container-{{ ai_gen_id }}">
                    {% if collection.featured_image %}
                      <img
                        src="{{ collection.featured_image | image_url: width: 400 }}"
                        alt="{{ collection.featured_image.alt | escape }}"
                        class="ai-recommendations-carousel__image-{{ ai_gen_id }}"
                        loading="lazy"
                        width="400"
                        height="400"
                      >
                    {% elsif collection.products.first.featured_image %}
                      <img
                        src="{{ collection.products.first.featured_image | image_url: width: 400 }}"
                        alt="{{ collection.products.first.featured_image.alt | escape }}"
                        class="ai-recommendations-carousel__image-{{ ai_gen_id }}"
                        loading="lazy"
                        width="400"
                        height="400"
                      >
                    {% else %}
                      <div class="ai-recommendations-carousel__image-placeholder-{{ ai_gen_id }}">
                        {{ 'collection-1' | placeholder_svg_tag }}
                      </div>
                    {% endif %}
                  </div>
                  <div class="ai-recommendations-carousel__content-{{ ai_gen_id }}">
                    <h3 class="ai-recommendations-carousel__title-{{ ai_gen_id }}">
                      {{ collection.title }}
                    </h3>
                    <div class="ai-recommendations-carousel__price-{{ ai_gen_id }}">
                      {{ collection.products_count }} 
                      {% if collection.products_count == 1 %}
                        product
                      {% else %}
                        products
                      {% endif %}
                    </div>
                    {% if block.settings.show_collection_description and collection.description != blank %}
                      <div class="ai-recommendations-carousel__description-{{ ai_gen_id }}">
                        {{ collection.description | strip_html | truncate: 100 }}
                      </div>
                    {% endif %}
                  </div>
                </a>
              </div>
            {% endunless %}
          {% endfor %}
        </div>

        <button
          class="ai-recommendations-carousel__nav-{{ ai_gen_id }} ai-recommendations-carousel__nav--next-{{ ai_gen_id }}"
          aria-label="Next collections"
          data-carousel="collections"
          data-direction="next"
        >
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
            <path d="M6 4L10 8L6 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      {% else %}
        <div class="ai-recommendations-carousel__empty-state-{{ ai_gen_id }}">
          <div class="ai-recommendations-carousel__empty-state-icon-{{ ai_gen_id }}">
            {{ 'collection-1' | placeholder_svg_tag }}
          </div>
          <p>No collections available to display.</p>
        </div>
      {% endif %}
    </div>
  </div>
</recommendations-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class RecommendationsCarousel{{ai_gen_id}} extends HTMLElement {
      constructor() {
        super();
        this.scrollAmount = 200;
      }

      connectedCallback() {
        this.setupNavigation();
        this.updateNavigationState();
      }

      setupNavigation() {
        const navButtons = this.querySelectorAll('.ai-recommendations-carousel__nav-{{ ai_gen_id }}');
        
        navButtons.forEach(button => {
          button.addEventListener('click', (e) => {
            const carousel = e.target.getAttribute('data-carousel');
            const direction = e.target.getAttribute('data-direction');
            const track = this.querySelector(`[data-track="${carousel}"]`);
            
            if (track) {
              this.scroll(track, direction);
            }
          });
        });

        const tracks = this.querySelectorAll('.ai-recommendations-carousel__track-{{ ai_gen_id }}');
        tracks.forEach(track => {
          track.addEventListener('scroll', () => {
            this.updateNavigationState();
          });
        });
      }

      scroll(track, direction) {
        const scrollLeft = track.scrollLeft;
        const newScrollLeft = direction === 'next' 
          ? scrollLeft + this.scrollAmount 
          : scrollLeft - this.scrollAmount;
        
        track.scrollTo({
          left: newScrollLeft,
          behavior: 'smooth'
        });
      }

      updateNavigationState() {
        const tracks = this.querySelectorAll('.ai-recommendations-carousel__track-{{ ai_gen_id }}');
        
        tracks.forEach(track => {
          const trackType = track.getAttribute('data-track');
          const prevButton = this.querySelector(`[data-carousel="${trackType}"][data-direction="prev"]`);
          const nextButton = this.querySelector(`[data-carousel="${trackType}"][data-direction="next"]`);
          
          if (prevButton && nextButton) {
            const isAtStart = track.scrollLeft <= 0;
            const isAtEnd = track.scrollLeft >= track.scrollWidth - track.clientWidth - 1;
            
            prevButton.disabled = isAtStart;
            nextButton.disabled = isAtEnd;
          }
        });
      }
    }

    customElements.define('recommendations-carousel-{{ ai_gen_id }}', RecommendationsCarousel{{ai_gen_id}});
  })();
</script>

{% schema %}
{
  "name": "Recommendations carousel",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Products section"
    },
    {
      "type": "text",
      "id": "products_heading",
      "label": "Products heading",
      "default": "Recommended for you"
    },
    {
      "type": "text",
      "id": "products_subheading",
      "label": "Products subheading",
      "default": "Based on your browsing history"
    },
    {
      "type": "range",
      "id": "products_limit",
      "min": 4,
      "max": 20,
      "step": 1,
      "label": "Maximum products to show",
      "default": 12
    },
    {
      "type": "checkbox",
      "id": "show_product_description",
      "label": "Show product descriptions",
      "default": true
    },
    {
      "type": "header",
      "content": "Collections section"
    },
    {
      "type": "text",
      "id": "collections_heading",
      "label": "Collections heading",
      "default": "Shop by category"
    },
    {
      "type": "text",
      "id": "collections_subheading",
      "label": "Collections subheading",
      "default": "Explore our product collections"
    },
    {
      "type": "range",
      "id": "collections_limit",
      "min": 4,
      "max": 20,
      "step": 1,
      "label": "Maximum collections to show",
      "default": 10
    },
    {
      "type": "checkbox",
      "id": "show_collection_description",
      "label": "Show collection descriptions",
      "default": true
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "item_width_mobile",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Item width on mobile",
      "default": 200
    },
    {
      "type": "range",
      "id": "item_width_desktop",
      "min": 200,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Item width on desktop",
      "default": 280
    },
    {
      "type": "range",
      "id": "image_height_mobile",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Image height on mobile",
      "default": 200
    },
    {
      "type": "range",
      "id": "image_height_desktop",
      "min": 200,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Image height on desktop",
      "default": 280
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 8,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Space between items",
      "default": 16
    },
    {
      "type": "range",
      "id": "section_spacing",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Space between sections",
      "default": 40
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "card_background_color",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_text_color",
      "label": "Navigation button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Navigation button hover",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "subheading_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subheading size",
      "default": 16
    },
    {
      "type": "range",
      "id": "item_title_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Item title size",
      "default": 16
    },
    {
      "type": "range",
      "id": "price_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Price size",
      "default": 14
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 10,
      "max": 16,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 12
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "heading_margin",
      "min": 8,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Heading bottom margin",
      "default": 16
    },
    {
      "type": "range",
      "id": "content_spacing",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Content spacing",
      "default": 24
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Card padding",
      "default": 16
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Recommendations carousel"
    }
  ]
}
{% endschema %}