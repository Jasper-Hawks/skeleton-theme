{% doc %}
  @prompt
    Create recommended products carousel that is mobile friend and displays all products that are recommended from the search and discovery app. Then make a carousel displaying all collections. Make it all mobile friendly, fix recommended for you error. There was a comparison of string with 0 failed, Just make a recommended for you carousel that matches the styling of the site

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-recommended-carousel-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding }}px0;
    background-color: {{ settings.background_color }};
  }

  .ai-recommended-carousel__container-{{ ai_gen_id }} {
    max-width: {{ settings.max_page_width }};
    margin: 0 auto;
    padding: 0 {{ settings.min_page_margin }}px;
  }

  .ai-recommended-carousel__heading-{{ ai_gen_id }} {
    font-family: {{ settings.type_primary_font.family }}, {{ settings.type_primary_font.fallback_families }};
    font-size: {{ block.settings.heading_size }}px;
    color: {{ settings.foreground_color }};
    text-align: {{ block.settings.heading_alignment }};
    margin:0 0 {{ block.settings.heading_margin }}px;
    font-weight: 600;
  }

  .ai-recommended-carousel__wrapper-{{ ai_gen_id }} {
    position: relative;}

  .ai-recommended-carousel__track-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.item_spacing }}px;
    overflow-x: auto;
    scroll-behavior: smooth;
    padding-bottom: 10px;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .ai-recommended-carousel__track-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-recommended-carousel__item-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.item_width_mobile }}px;
    background-color: {{ settings.background_color }};
    border-radius: {{ settings.input_corner_radius }}px;
    overflow: hidden;
    transition: transform 0.3s ease;
    text-decoration: none;
    color: inherit;
  }

  .ai-recommended-carousel__item-{{ ai_gen_id }}:hover {
    transform: translateY(-2px);
  }

  .ai-recommended-carousel__image-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.image_height_mobile }}px;
    overflow: hidden;
    background-color: #f8f8f8;
  }

  .ai-recommended-carousel__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-recommended-carousel__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f8f8f8;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-recommended-carousel__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;opacity: 0.3;
  }

  .ai-recommended-carousel__content-{{ ai_gen_id }} {
    padding: {{ block.settings.card_padding }}px;
  }

  .ai-recommended-carousel__title-{{ ai_gen_id }} {
    font-family: {{ settings.type_primary_font.family }}, {{ settings.type_primary_font.fallback_families }};
    font-size: {{ block.settings.item_title_size }}px;
    color: {{ settings.foreground_color }};
    margin: 0 0 8px;
    font-weight: 500;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .ai-recommended-carousel__price-{{ ai_gen_id }} {
    font-family: {{ settings.type_primary_font.family }}, {{ settings.type_primary_font.fallback_families }};
    font-size: {{ block.settings.price_size }}px;
    color: {{ settings.foreground_color }};
    font-weight: 600;
  }

  .ai-recommended-carousel__nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: {{ settings.background_color }};
    color: {{ settings.foreground_color }};
    border: 1px solid {{ settings.foreground_color | color_modify: 'alpha', 0.2 }};
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    z-index: 2;
  }

  .ai-recommended-carousel__nav-{{ ai_gen_id }}:hover {
    background-color: {{ settings.foreground_color }};
    color: {{ settings.background_color }};
  }

  .ai-recommended-carousel__nav--prev-{{ ai_gen_id }} {
    left: -20px;
  }

  .ai-recommended-carousel__nav--next-{{ ai_gen_id }} {
    right: -20px;
  }

  .ai-recommended-carousel__nav-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-recommended-carousel__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: {{ settings.foreground_color }};
    opacity: 0.6;
  }

  .ai-recommended-carousel__empty-state-icon-{{ ai_gen_id }} {
    width: 80px;
    height: 80px;
    margin: 0 auto 20px;
    opacity: 0.3;
  }

  .ai-recommended-carousel__empty-state-text-{{ ai_gen_id }} {
    font-family: {{ settings.type_primary_font.family }}, {{ settings.type_primary_font.fallback_families }};
    font-size:16px;
    line-height: 1.5;
  }

  @media screen and (min-width: 750px) {
    .ai-recommended-carousel__item-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.item_width_desktop }}px;
    }

    .ai-recommended-carousel__image-container-{{ ai_gen_id }} {
      height: {{ block.settings.image_height_desktop }}px;
    }

    .ai-recommended-carousel__nav--prev-{{ ai_gen_id }} {
      left: -60px;
    }

    .ai-recommended-carousel__nav--next-{{ ai_gen_id }} {
      right: -60px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-recommended-carousel__nav-{{ ai_gen_id }} {
      display: none;
    }
  }
{% endstyle %}<recommended-carousel-{{ ai_gen_id }}
  class="ai-recommended-carousel-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-recommended-carousel__container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h2 class="ai-recommended-carousel__heading-{{ ai_gen_id }}">
        {{ block.settings.heading }}
      </h2>
    {% endif %}<div class="ai-recommended-carousel__wrapper-{{ ai_gen_id }}">
      {% if recommendations.products and recommendations.products.size > 0 %}
        <button
          class="ai-recommended-carousel__nav-{{ ai_gen_id }} ai-recommended-carousel__nav--prev-{{ ai_gen_id }}"
          aria-label="Previous products"
          data-direction="prev"
        >
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
            <path d="M1012L6 8L10 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>

        <div class="ai-recommended-carousel__track-{{ ai_gen_id }}">
          {% for product in recommendations.products limit: block.settings.products_limit %}
            <a href="{{ product.url }}" class="ai-recommended-carousel__item-{{ ai_gen_id }}">
              <div class="ai-recommended-carousel__image-container-{{ ai_gen_id }}">
                {% if product.featured_image %}
                  <img
                    src="{{ product.featured_image | image_url: width: 400}}"
                    alt="{{ product.featured_image.alt | escape }}"
                    class="ai-recommended-carousel__image-{{ ai_gen_id }}"loading="lazy"
                    width="400"
                    height="400"
                  >
                {% else %}
                  <div class="ai-recommended-carousel__image-placeholder-{{ ai_gen_id }}">
                    {{ 'product-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>
              <div class="ai-recommended-carousel__content-{{ ai_gen_id }}">
                <h3 class="ai-recommended-carousel__title-{{ ai_gen_id }}">
                  {{ product.title }}
                </h3>
                <div class="ai-recommended-carousel__price-{{ ai_gen_id }}">
                  {{ product.price | money }}
                </div>
              </div>
            </a>
          {% endfor %}
        </div>

        <button
          class="ai-recommended-carousel__nav-{{ ai_gen_id }} ai-recommended-carousel__nav--next-{{ ai_gen_id }}"
          aria-label="Next products"
          data-direction="next"
        >
          <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
            <path d="M6 4L10 8L6 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      {% else %}
        <div class="ai-recommended-carousel__empty-state-{{ ai_gen_id }}">
          <div class="ai-recommended-carousel__empty-state-icon-{{ ai_gen_id }}">
            {{ 'product-1' | placeholder_svg_tag }}
          </div>
          <div class="ai-recommended-carousel__empty-state-text-{{ ai_gen_id }}">
            <p>No recommended products available yet.</p>
            <p>The Search & Discovery app will populate recommendations based on customer behavior.</p>
          </div>
        </div>
      {% endif %}
    </div>
  </div>
</recommended-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class RecommendedCarousel{{ai_gen_id}} extends HTMLElement {
      constructor() {
        super();
        this.scrollAmount = 280;
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-recommended-carousel__track-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('[data-direction="prev"]');
        this.nextButton = this.querySelector('[data-direction="next"]');
        
        if (this.track && this.prevButton && this.nextButton) {
          this.setupNavigation();
          this.updateNavigationState();
        }
      }

      setupNavigation() {
        this.prevButton.addEventListener('click', () => {
          this.scroll('prev');
        });

        this.nextButton.addEventListener('click', () => {
          this.scroll('next');
        });

        this.track.addEventListener('scroll', () => {
          this.updateNavigationState();
        });
      }

      scroll(direction) {
        const scrollLeft = this.track.scrollLeft;
        const newScrollLeft = direction === 'next' 
          ? scrollLeft + this.scrollAmount 
          : scrollLeft - this.scrollAmount;
        
        this.track.scrollTo({
          left: newScrollLeft,
          behavior: 'smooth'
        });
      }

      updateNavigationState() {
        const isAtStart = this.track.scrollLeft <= 0;
        const isAtEnd = this.track.scrollLeft >= this.track.scrollWidth - this.track.clientWidth - 1;
        
        this.prevButton.disabled = isAtStart;
        this.nextButton.disabled = isAtEnd;
      }
    }

    customElements.define('recommended-carousel-{{ ai_gen_id }}', RecommendedCarousel{{ai_gen_id}});
  })();
</script>

{% schema %}
{
  "name": "Recommended for you",
  "tag": null,
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Recommended for you"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "products_limit",
      "min": 4,
      "max": 20,
      "step": 1,
      "label": "Maximum products to show",
      "default": 12
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "item_width_mobile",
      "min": 150,
      "max": 280,
      "step": 10,
      "unit": "px",
      "label": "Item width on mobile",
      "default": 200
    },
    {
      "type": "range",
      "id": "item_width_desktop",
      "min": 200,
      "max": 350,
      "step": 10,
      "unit": "px",
      "label": "Item width on desktop",
      "default": 280
    },
    {
      "type": "range",
      "id": "image_height_mobile",
      "min": 150,
      "max": 280,
      "step": 10,
      "unit": "px",
      "label": "Image height on mobile",
      "default": 200
    },
    {
      "type": "range",
      "id": "image_height_desktop",
      "min": 200,
      "max": 350,
      "step": 10,
      "unit": "px",
      "label": "Image height on desktop",
      "default": 280
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 8,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Space between items",
      "default": 16
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "item_title_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Product title size",
      "default": 16
    },
    {
      "type": "range",
      "id": "price_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Price size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "heading_margin",
      "min": 8,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Heading bottom margin",
      "default": 24
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Card padding",
      "default": 16
    }
  ],
  "presets": [
    {
      "name": "Recommended for you"
    }
  ]
}
{% endschema %}