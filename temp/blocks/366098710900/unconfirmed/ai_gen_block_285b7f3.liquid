{% doc %}
  @prompt
    Make a recommended products carousel similar to the collection carousel. Make sure that the recommended products are properly displayed from the shopify app search and discovery, Link the card back to the product

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-recommended-carousel-{{ ai_gen_id }} {
    width: 100%;
    overflow: hidden;
    position: relative;
    padding: 20px 0;
  }

  .ai-recommended-carousel__header-{{ ai_gen_id }} {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 24px;
  }

  .ai-recommended-carousel__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    margin: 0;
  }

  .ai-recommended-carousel__controls-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
  }

  .ai-recommended-carousel__control-{{ ai_gen_id }} {
    width: 40px;
    height: 40px;
    border: 1px solid {{ block.settings.button_border_color }};
    background: {{ block.settings.button_background }};
    color: {{ block.settings.button_color }};
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .ai-recommended-carousel__control-{{ ai_gen_id }}:hover {
    background: {{ block.settings.button_hover_background }};
    color: {{ block.settings.button_hover_color }};
  }

  .ai-recommended-carousel__control-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .ai-recommended-carousel__track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    gap: {{ block.settings.product_gap }}px;
  }

  .ai-recommended-carousel__product-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.products_per_view }}%;
    max-width: {{ block.settings.products_per_view }}%;
    padding: 16px;
    border: 1px solid {{ block.settings.product_border_color }};
    border-radius: {{ block.settings.product_border_radius }}px;
    background: {{ block.settings.product_background }};
    text-align: center;
    text-decoration: none;
    color: inherit;
    display: block;
    transition: all 0.3s ease;
  }

  .ai-recommended-carousel__product-{{ ai_gen_id }}:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    text-decoration: none;
  }

  .ai-recommended-carousel__product-image-{{ ai_gen_id }} {
    width: 100%;
    aspect-ratio: 1;
    margin-bottom: 12px;
    border-radius: {{ block.settings.image_border_radius }}px;
    overflow: hidden;
  }

  .ai-recommended-carousel__product-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-recommended-carousel__product-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-recommended-carousel__product-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.5;
  }

  .ai-recommended-carousel__product-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.product_title_size }}px;
    color: {{ block.settings.product_title_color }};
    margin: 0 0 8px;
    font-weight: 600;
    line-height: 1.3;
  }

  .ai-recommended-carousel__product-price-{{ ai_gen_id }} {
    font-size: {{ block.settings.product_price_size }}px;
    color: {{ block.settings.product_price_color }};
    margin: 0 0 12px;
  }

  .ai-recommended-carousel__product-button-{{ ai_gen_id }} {
    background: {{ block.settings.add_to_cart_background }};
    color: {{ block.settings.add_to_cart_color }};
    border: none;
    padding: 8px 16px;
    border-radius: {{ block.settings.add_to_cart_border_radius }}px;
    cursor: pointer;
    font-size: 14px;
    transition: all 0.3s ease;
    width: 100%;
  }

  .ai-recommended-carousel__product-button-{{ ai_gen_id }}:hover {
    background: {{ block.settings.add_to_cart_hover_background }};
    color: {{ block.settings.add_to_cart_hover_color }};
  }

  .ai-recommended-carousel__empty-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: #666;
  }

  @media screen and (max-width: 749px) {
    .ai-recommended-carousel__product-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.products_per_view_mobile }}%;
      max-width: {{ block.settings.products_per_view_mobile }}%;
    }
  }
{% endstyle %}

<recommended-products-carousel-{{ ai_gen_id }}
  class="ai-recommended-carousel-{{ ai_gen_id }}"
  data-product-id="{{ product.id }}"
  data-products-per-view="{{ block.settings.products_per_view }}"
  data-products-per-view-mobile="{{ block.settings.products_per_view_mobile }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-recommended-carousel__header-{{ ai_gen_id }}">
    <h2 class="ai-recommended-carousel__title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    <div class="ai-recommended-carousel__controls-{{ ai_gen_id }}">
      <button class="ai-recommended-carousel__control-{{ ai_gen_id }} ai-recommended-carousel__prev-{{ ai_gen_id }}" aria-label="Previous products">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>
      <button class="ai-recommended-carousel__control-{{ ai_gen_id }} ai-recommended-carousel__next-{{ ai_gen_id }}" aria-label="Next products">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>
    </div>
  </div>

  <div class="ai-recommended-carousel__container-{{ ai_gen_id }}">
    <div class="ai-recommended-carousel__track-{{ ai_gen_id }}">
      <div class="ai-recommended-carousel__empty-{{ ai_gen_id }}">
        Loading recommended products...
      </div>
    </div>
  </div>
</recommended-products-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class RecommendedProductsCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.products = [];
        this.productsPerView = parseInt(this.dataset.productsPerView) || 4;
        this.productsPerViewMobile = parseInt(this.dataset.productsPerViewMobile) || 2;
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-recommended-carousel__track-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-recommended-carousel__prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-recommended-carousel__next-{{ ai_gen_id }}');
        
        this.setupEventListeners();
        this.loadRecommendedProducts();
      }

      setupEventListeners() {
        this.prevButton.addEventListener('click', () => this.goToPrevious());
        this.nextButton.addEventListener('click', () => this.goToNext());
        
        window.addEventListener('resize', () => this.updateCarousel());
      }

      async loadRecommendedProducts() {
        const productId = this.dataset.productId;
        if (!productId) return;

        try {
          const response = await fetch(`/recommendations/products.json?product_id=${productId}&limit=12`);
          const data = await response.json();
          
          if (data.products && data.products.length > 0) {
            this.products = data.products;
            this.renderProducts();
            this.updateControls();
          } else {
            this.renderEmptyState();
          }
        } catch (error) {
          console.error('Error loading recommended products:', error);
          this.renderEmptyState();
        }
      }

      renderProducts() {
        const productsHTML = this.products.map(product => {
          const imageUrl = product.featured_image ? 
            product.featured_image.replace('.jpg', '_300x300.jpg').replace('.png', '_300x300.png') : 
            null;
          
          return `
            <a href="${product.url}" class="ai-recommended-carousel__product-{{ ai_gen_id }}">
              <div class="ai-recommended-carousel__product-image-{{ ai_gen_id }}">
                ${imageUrl ? 
                  `<img src="${imageUrl}" alt="${this.escapeHtml(product.title)}" loading="lazy">` :
                  `<div class="ai-recommended-carousel__product-placeholder-{{ ai_gen_id }}">
                    ${'product-apparel-1' | placeholder_svg_tag}
                  </div>`
                }
              </div>
              <h3 class="ai-recommended-carousel__product-title-{{ ai_gen_id }}">${this.escapeHtml(product.title)}</h3>
              <div class="ai-recommended-carousel__product-price-{{ ai_gen_id }}">
                ${this.formatPrice(product.price)}
              </div>
              <button class="ai-recommended-carousel__product-button-{{ ai_gen_id }}" 
                      onclick="event.preventDefault(); window.location.href='${product.url}'">
                View Product
              </button>
            </a>
          `;
        }).join('');

        this.track.innerHTML = productsHTML;
        this.updateCarousel();
      }

      renderEmptyState() {
        this.track.innerHTML = `
          <div class="ai-recommended-carousel__empty-{{ ai_gen_id }}">
            <p>No recommended products available at the moment.</p>
          </div>
        `;
      }

      escapeHtml(text) {
        const map = {
          '&': '&amp;',
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          "'": '&#039;'
        };
        return text.replace(/[&<>"']/g, function(m) { return map[m]; });
      }

      formatPrice(price) {
        return new Intl.NumberFormat('en-US', {
          style: 'currency',
          currency: 'USD'
        }).format(price / 100);
      }

      getCurrentProductsPerView() {
        return window.innerWidth <= 749 ? this.productsPerViewMobile : this.productsPerView;
      }

      updateCarousel() {
        if (!this.products.length) return;

        const currentProductsPerView = this.getCurrentProductsPerView();
        const productWidth = 100 / currentProductsPerView;
        
        const productElements = this.track.querySelectorAll('.ai-recommended-carousel__product-{{ ai_gen_id }}');
        productElements.forEach(product => {
          product.style.flex = `0 0 ${productWidth}%`;
          product.style.maxWidth = `${productWidth}%`;
        });

        const translateX = -(this.currentIndex * productWidth);
        this.track.style.transform = `translateX(${translateX}%)`;
        
        this.updateControls();
      }

      goToPrevious() {
        if (this.currentIndex > 0) {
          this.currentIndex--;
          this.updateCarousel();
        }
      }

      goToNext() {
        const currentProductsPerView = this.getCurrentProductsPerView();
        const maxIndex = Math.max(0, this.products.length - currentProductsPerView);
        
        if (this.currentIndex < maxIndex) {
          this.currentIndex++;
          this.updateCarousel();
        }
      }

      updateControls() {
        const currentProductsPerView = this.getCurrentProductsPerView();
        const maxIndex = Math.max(0, this.products.length - currentProductsPerView);
        
        this.prevButton.disabled = this.currentIndex === 0;
        this.nextButton.disabled = this.currentIndex >= maxIndex;
      }
    }

    customElements.define('recommended-products-carousel-{{ ai_gen_id }}', RecommendedProductsCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Recommended products",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "You may also like"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "products_per_view",
      "min": 2,
      "max": 6,
      "step": 1,
      "label": "Products per view",
      "default": 4
    },
    {
      "type": "range",
      "id": "products_per_view_mobile",
      "min": 1,
      "max": 3,
      "step": 1,
      "label": "Products per view on mobile",
      "default": 2
    },
    {
      "type": "range",
      "id": "product_gap",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between products",
      "default": 16
    },
    {
      "type": "header",
      "content": "Heading style"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 24
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Product style"
    },
    {
      "type": "color",
      "id": "product_background",
      "label": "Product background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "product_border_color",
      "label": "Product border color",
      "default": "#e5e5e5"
    },
    {
      "type": "range",
      "id": "product_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Product border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 4
    },
    {
      "type": "range",
      "id": "product_title_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Product title size",
      "default": 16
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Product title color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "product_price_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Product price size",
      "default": 14
    },
    {
      "type": "color",
      "id": "product_price_color",
      "label": "Product price color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Navigation buttons"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button border color",
      "default": "#e5e5e5"
    },
    {
      "type": "color",
      "id": "button_hover_background",
      "label": "Button hover background",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Add to cart button"
    },
    {
      "type": "color",
      "id": "add_to_cart_background",
      "label": "Background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "add_to_cart_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "add_to_cart_hover_background",
      "label": "Hover background",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "add_to_cart_hover_color",
      "label": "Hover text color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "add_to_cart_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Recommended products"
    }
  ]
}
{% endschema %}