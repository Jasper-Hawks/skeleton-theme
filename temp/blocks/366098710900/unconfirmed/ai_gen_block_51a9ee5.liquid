{% doc %}
  @prompt
    Add a recommended products carousel that is mobile friendly. Make sure that all products that are recommended are displayed properly, Make sure products that are pulled from search and discovery display properly

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-recommended-carousel-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding }}px 0;
    background-color: {{ block.settings.background_color }};
  }

  .ai-recommended-carousel__container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-recommended-carousel__header-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: 30px;
  }

  .ai-recommended-carousel__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    margin: 0 0 10px;
    font-weight: 600;
  }

  .ai-recommended-carousel__subtitle-{{ ai_gen_id }} {
    font-size: {{ block.settings.subtitle_size }}px;
    color: {{ block.settings.subtitle_color }};
    margin: 0;
  }

  .ai-recommended-carousel__wrapper-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-recommended-carousel__track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    gap: {{ block.settings.product_gap }}px;
  }

  .ai-recommended-carousel__slide-{{ ai_gen_id }} {
    flex: 0 0 auto;
    width: calc((100% - {{ block.settings.product_gap | times: 3 }}px) / 4);
    background-color: {{ block.settings.card_background }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .ai-recommended-carousel__slide-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .ai-recommended-carousel__image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    overflow: hidden;
  }

  .ai-recommended-carousel__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-recommended-carousel__slide-{{ ai_gen_id }}:hover .ai-recommended-carousel__image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-recommended-carousel__placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-recommended-carousel__placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-recommended-carousel__badge-{{ ai_gen_id }} {
    position: absolute;
    top: 8px;
    left: 8px;
    background-color: {{ block.settings.sale_badge_color }};
    color: {{ block.settings.sale_badge_text_color }};
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 600;
    z-index: 1;
  }

  .ai-recommended-carousel__content-{{ ai_gen_id }} {
    padding: 16px;
  }

  .ai-recommended-carousel__product-vendor-{{ ai_gen_id }} {
    font-size: 12px;
    color: #999;
    margin: 0 0 4px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .ai-recommended-carousel__product-title-{{ ai_gen_id }} {
    font-size: 16px;
    font-weight: 500;
    color: {{ block.settings.product_title_color }};
    margin: 0 0 8px;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .ai-recommended-carousel__product-price-{{ ai_gen_id }} {
    font-size: 18px;
    font-weight: 600;
    color: {{ block.settings.product_price_color }};
    margin: 0 0 8px;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .ai-recommended-carousel__product-compare-price-{{ ai_gen_id }} {
    font-size: 14px;
    color: #999;
    text-decoration: line-through;
    font-weight: 400;
  }

  .ai-recommended-carousel__product-sale-price-{{ ai_gen_id }} {
    color: {{ block.settings.sale_price_color }};
  }

  .ai-recommended-carousel__product-availability-{{ ai_gen_id }} {
    font-size: 12px;
    margin: 0 0 12px;
    font-weight: 500;
  }

  .ai-recommended-carousel__product-availability--available-{{ ai_gen_id }} {
    color: {{ block.settings.available_color }};
  }

  .ai-recommended-carousel__product-availability--unavailable-{{ ai_gen_id }} {
    color: {{ block.settings.unavailable_color }};
  }

  .ai-recommended-carousel__product-rating-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 4px;
    margin: 0 0 12px;
    font-size: 12px;
  }

  .ai-recommended-carousel__stars-{{ ai_gen_id }} {
    display: flex;
    gap: 1px;
  }

  .ai-recommended-carousel__star-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    fill: #ddd;
  }

  .ai-recommended-carousel__star--filled-{{ ai_gen_id }} {
    fill: #ffc107;
  }

  .ai-recommended-carousel__product-link-{{ ai_gen_id }} {
    display: inline-block;
    padding: 8px 16px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.3s ease;
    width: 100%;
    text-align: center;
    box-sizing: border-box;
  }

  .ai-recommended-carousel__product-link-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  .ai-recommended-carousel__product-link--unavailable-{{ ai_gen_id }} {
    background-color: #ccc;
    color: #666;
    cursor: not-allowed;
  }

  .ai-recommended-carousel__nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: {{ block.settings.nav_button_color }};
    color: {{ block.settings.nav_button_text_color }};
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    transition: background-color 0.3s ease, transform 0.3s ease;
    z-index: 2;
  }

  .ai-recommended-carousel__nav-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_color }};
    transform: translateY(-50%) scale(1.1);
  }

  .ai-recommended-carousel__nav-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: translateY(-50%) scale(1);
  }

  .ai-recommended-carousel__nav--prev-{{ ai_gen_id }} {
    left: -20px;
  }

  .ai-recommended-carousel__nav--next-{{ ai_gen_id }} {
    right: -20px;
  }

  .ai-recommended-carousel__dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 20px;
  }

  .ai-recommended-carousel__dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #ccc;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-recommended-carousel__dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.nav_button_color }};
  }

  .ai-recommended-carousel__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: #666;
  }

  .ai-recommended-carousel__empty-state-{{ ai_gen_id }} h3 {
    margin: 0 0 10px;
    font-size: 18px;
  }

  .ai-recommended-carousel__empty-state-{{ ai_gen_id }} p {
    margin: 0;
    font-size: 14px;
  }

  @media screen and (max-width: 1024px) {
    .ai-recommended-carousel__slide-{{ ai_gen_id }} {
      width: calc((100% - {{ block.settings.product_gap | times: 2 }}px) / 3);
    }
  }

  @media screen and (max-width: 768px) {
    .ai-recommended-carousel__slide-{{ ai_gen_id }} {
      width: calc((100% - {{ block.settings.product_gap }}px) / 2);
    }

    .ai-recommended-carousel__nav-{{ ai_gen_id }} {
      display: none;
    }
  }

  @media screen and (max-width: 480px) {
    .ai-recommended-carousel__slide-{{ ai_gen_id }} {
      width: calc(100% - 40px);
    }

    .ai-recommended-carousel__container-{{ ai_gen_id }} {
      padding: 0 10px;
    }
  }
{% endstyle %}

<recommended-products-carousel-{{ ai_gen_id }}
  class="ai-recommended-carousel-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-recommended-carousel__container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank or block.settings.subtitle != blank %}
      <div class="ai-recommended-carousel__header-{{ ai_gen_id }}">
        {% if block.settings.heading != blank %}
          <h2 class="ai-recommended-carousel__title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
        {% endif %}
        {% if block.settings.subtitle != blank %}
          <p class="ai-recommended-carousel__subtitle-{{ ai_gen_id }}">{{ block.settings.subtitle }}</p>
        {% endif %}
      </div>
    {% endif %}

    {% liquid
      assign products_to_show = block.settings.product_list
      
      if block.settings.show_search_discovery == true and product != blank
        assign recommended_products = product | related_products: limit: block.settings.max_products
        if recommended_products.size > 0
          assign products_to_show = recommended_products
        endif
      endif
      
      if products_to_show == blank and block.settings.fallback_collection != blank
        assign products_to_show = block.settings.fallback_collection.products | limit: block.settings.max_products
      endif
    %}

    {% if products_to_show != blank and products_to_show.size > 0 %}
      <div class="ai-recommended-carousel__wrapper-{{ ai_gen_id }}">
        <button
          class="ai-recommended-carousel__nav-{{ ai_gen_id }} ai-recommended-carousel__nav--prev-{{ ai_gen_id }}"
          aria-label="Previous products"
          disabled
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="15,18 9,12 15,6"></polyline>
          </svg>
        </button>

        <div class="ai-recommended-carousel__track-{{ ai_gen_id }}">
          {% for product_item in products_to_show limit: block.settings.max_products %}
            <div class="ai-recommended-carousel__slide-{{ ai_gen_id }}">
              <div class="ai-recommended-carousel__image-wrapper-{{ ai_gen_id }}">
                {% if product_item.compare_at_price > product_item.price %}
                  {% assign discount_percentage = product_item.compare_at_price | minus: product_item.price | times: 100 | divided_by: product_item.compare_at_price %}<div class="ai-recommended-carousel__badge-{{ ai_gen_id }}">
                    -{{ discount_percentage }}%
                  </div>
                {% endif %}
                
                {% if product_item.featured_image %}
                  <img
                    src="{{ product_item.featured_image | image_url: width: 400 }}"
                    alt="{{ product_item.featured_image.alt | default: product_item.title | escape }}"
                    class="ai-recommended-carousel__image-{{ ai_gen_id }}"
                    loading="lazy"
                    width="400"
                    height="400"
                  >
                {% else %}
                  <div class="ai-recommended-carousel__placeholder-{{ ai_gen_id }}">
                    {{ 'product-apparel-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>
              
              <div class="ai-recommended-carousel__content-{{ ai_gen_id }}">
                {% if block.settings.show_vendor and product_item.vendor != blank %}
                  <div class="ai-recommended-carousel__product-vendor-{{ ai_gen_id }}">
                    {{ product_item.vendor }}
                  </div>
                {% endif %}
                
                <h3 class="ai-recommended-carousel__product-title-{{ ai_gen_id }}">
                  {{ product_item.title }}
                </h3>
                
                {% if block.settings.show_price %}
                  <div class="ai-recommended-carousel__product-price-{{ ai_gen_id }}">
                    {% if product_item.price_varies %}
                      <span>From {{ product_item.price_min | money }}</span>
                    {% else %}
                      {% if product_item.compare_at_price > product_item.price %}
                        <span class="ai-recommended-carousel__product-sale-price-{{ ai_gen_id }}">
                          {{ product_item.price | money }}
                        </span>
                        <span class="ai-recommended-carousel__product-compare-price-{{ ai_gen_id }}">
                          {{ product_item.compare_at_price | money }}
                        </span>
                      {% else %}
                        <span>{{ product_item.price | money }}</span>
                      {% endif %}
                    {% endif %}
                  </div>
                {% endif %}
                
                {% if block.settings.show_availability %}
                  <div class="ai-recommended-carousel__product-availability-{{ ai_gen_id }} {% if product_item.available %}ai-recommended-carousel__product-availability--available-{{ ai_gen_id }}{% else %}ai-recommended-carousel__product-availability--unavailable-{{ ai_gen_id }}{% endif %}">
                    {% if product_item.available %}
                      In stock
                    {% else %}
                      Sold out
                    {% endif %}
                  </div>
                {% endif %}
                
                {% if block.settings.show_rating and product_item.metafields.reviews.rating.value != blank %}
                  {% assign rating = product_item.metafields.reviews.rating.value.rating %}
                  {% assign rating_count = product_item.metafields.reviews.rating.value.count %}
                  <div class="ai-recommended-carousel__product-rating-{{ ai_gen_id }}">
                    <div class="ai-recommended-carousel__stars-{{ ai_gen_id }}">
                      {% for i in (1..5) %}
                        <svg class="ai-recommended-carousel__star-{{ ai_gen_id }} {% if i <= rating %}ai-recommended-carousel__star--filled-{{ ai_gen_id }}{% endif %}" viewBox="0 0 24 24">
                          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                      {% endfor %}
                    </div>
                    {% if rating_count > 0 %}
                      <span>({{ rating_count }})</span>
                    {% endif %}
                  </div>
                {% endif %}
                
                <a
                  href="{{ product_item.url }}"
                  class="ai-recommended-carousel__product-link-{{ ai_gen_id }} {% unless product_item.available %}ai-recommended-carousel__product-link--unavailable-{{ ai_gen_id }}{% endunless %}"
                  {% unless product_item.available %}aria-disabled="true"{% endunless %}
                >
                  {% if product_item.available %}
                    {{ block.settings.button_text }}
                  {% else %}
                    Sold out
                  {% endif %}
                </a>
              </div>
            </div>
          {% endfor %}
        </div>

        <button
          class="ai-recommended-carousel__nav-{{ ai_gen_id }} ai-recommended-carousel__nav--next-{{ ai_gen_id }}"
          aria-label="Next products"
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9,18 15,12 9,6"></polyline>
          </svg>
        </button>
      </div>

      <div class="ai-recommended-carousel__dots-{{ ai_gen_id }}"></div>
    {% else %}
      <div class="ai-recommended-carousel__empty-state-{{ ai_gen_id }}">
        <h3>No products to display</h3>
        <p>Configure products or enable search & discovery recommendations</p>
      </div>
    {% endif %}
  </div>
</recommended-products-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class RecommendedProductsCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.slidesToShow = 4;
        this.totalSlides = 0;
        this.track = null;
        this.slides = [];
        this.prevButton = null;
        this.nextButton = null;
        this.dotsContainer = null;
        this.dots = [];
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-recommended-carousel__track-{{ ai_gen_id }}');
        this.slides = this.querySelectorAll('.ai-recommended-carousel__slide-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-recommended-carousel__nav--prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-recommended-carousel__nav--next-{{ ai_gen_id }}');
        this.dotsContainer = this.querySelector('.ai-recommended-carousel__dots-{{ ai_gen_id }}');

        if (!this.track || this.slides.length === 0) return;

        this.totalSlides = this.slides.length;
        this.updateSlidesToShow();
        this.createDots();
        this.setupEventListeners();
        this.updateCarousel();

        window.addEventListener('resize', () => {
          this.updateSlidesToShow();
          this.createDots();
          this.updateCarousel();
        });
      }

      updateSlidesToShow() {
        const width = window.innerWidth;
        if (width <= 480) {
          this.slidesToShow = 1;
        } else if (width <= 768) {
          this.slidesToShow = 2;
        } else if (width <= 1024) {
          this.slidesToShow = 3;
        } else {
          this.slidesToShow = 4;
        }

        if (this.currentSlide > this.totalSlides - this.slidesToShow) {
          this.currentSlide = Math.max(0, this.totalSlides - this.slidesToShow);
        }
      }

      createDots() {
        if (!this.dotsContainer) return;

        this.dotsContainer.innerHTML = '';
        this.dots = [];

        const totalDots = Math.max(1, this.totalSlides - this.slidesToShow + 1);

        for (let i = 0; i < totalDots; i++) {
          const dot = document.createElement('button');
          dot.className = `ai-recommended-carousel__dot-{{ ai_gen_id }}`;
          dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
          this.dots.push(dot);
        }
      }

      setupEventListeners() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.prevSlide());
        }

        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.nextSlide());
        }

        let startX = 0;
        let currentX = 0;
        let isDragging = false;

        this.track.addEventListener('touchstart', (e) => {
          startX = e.touches[0].clientX;
          isDragging = true;
        });

        this.track.addEventListener('touchmove', (e) => {
          if (!isDragging) return;
          currentX = e.touches[0].clientX;
        });

        this.track.addEventListener('touchend', () => {
          if (!isDragging) return;
          const diff = startX - currentX;
          if (Math.abs(diff) > 50) {
            if (diff > 0) {
              this.nextSlide();
            } else {
              this.prevSlide();
            }
          }
          isDragging = false;
        });
      }

      prevSlide() {
        if (this.currentSlide > 0) {
          this.currentSlide--;
          this.updateCarousel();
        }
      }

      nextSlide() {
        if (this.currentSlide < this.totalSlides - this.slidesToShow) {
          this.currentSlide++;
          this.updateCarousel();
        }
      }

      goToSlide(index) {
        this.currentSlide = Math.max(0, Math.min(index, this.totalSlides - this.slidesToShow));
        this.updateCarousel();
      }

      updateCarousel() {
        if (!this.track) return;

        const slideWidth = this.slides[0].offsetWidth;
        const gap = parseInt(getComputedStyle(this.track).gap) || 0;
        const translateX = -(this.currentSlide * (slideWidth + gap));

        this.track.style.transform = `translateX(${translateX}px)`;

        if (this.prevButton) {
          this.prevButton.disabled = this.currentSlide === 0;
        }

        if (this.nextButton) {
          this.nextButton.disabled = this.currentSlide >= this.totalSlides - this.slidesToShow;
        }

        this.dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }
    }

    customElements.define('recommended-products-carousel-{{ ai_gen_id }}', RecommendedProductsCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Recommended products",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "You might also like"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle"
    },
    {
      "type": "checkbox",
      "id": "show_search_discovery",
      "label": "Use Search & Discovery recommendations",
      "default": true
    },
    {
      "type": "product_list",
      "id": "product_list",
      "label": "Manual product selection"
    },
    {
      "type": "collection",
      "id": "fallback_collection",
      "label": "Fallback collection"
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 4,
      "max": 20,
      "step": 1,
      "label": "Maximum products",
      "default": 12
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "View product"
    },
    {
      "type": "header",
      "content": "Product information"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_price",
      "label": "Show price",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_availability",
      "label": "Show availability",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "label": "Show product rating",
      "default": false
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "product_gap",
      "min": 10,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "Product gap",
      "default": 20
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "subtitle_color",
      "label": "Subtitle",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "product_title_color",
      "label": "Product title",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "product_price_color",
      "label": "Product price",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "sale_price_color",
      "label": "Sale price",
      "default": "#d82c0d"
    },
    {
      "type": "color",
      "id": "sale_badge_color",
      "label": "Sale badge background",
      "default": "#d82c0d"
    },
    {
      "type": "color",
      "id": "sale_badge_text_color",
      "label": "Sale badge text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "available_color",
      "label": "Available status",
      "default": "#008060"
    },
    {
      "type": "color",
      "id": "unavailable_color",
      "label": "Unavailable status",
      "default": "#d82c0d"
    },
    {
      "type": "header",
      "content": "Button style"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Hover background",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 4
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_text_color",
      "label": "Navigation text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Navigation hover",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 28
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subtitle size",
      "default": 16
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Recommended products"
    }
  ]
}
{% endschema %}