{% doc %}
  @prompt
    Search with the ability to find products and blog posts

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-search-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: {{ block.settings.max_width }}px;
    margin: 0 auto;
  }

  .ai-search-form-{{ ai_gen_id }} {
    position: relative;
    display: flex;
    align-items: center;
    background-color: {{ block.settings.background_color }};
    border: 1px solid {{ block.settings.border_color }};
    border-radius: {{ block.settings.border_radius }}px;
    overflow: hidden;
  }

  .ai-search-input-{{ ai_gen_id }} {
    flex: 1;
    padding: {{ block.settings.input_padding }}px;
    border: none;
    background: transparent;
    font-size: {{ block.settings.font_size }}px;
    color: {{ block.settings.text_color }};
    outline: none;
  }

  .ai-search-input-{{ ai_gen_id }}::placeholder {
    color: {{ block.settings.placeholder_color }};
  }

  .ai-search-button-{{ ai_gen_id }} {
    padding: {{ block.settings.input_padding }}px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s ease;
  }

  .ai-search-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  .ai-search-button-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
  }

  .ai-search-results-{{ ai_gen_id }} {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background-color: {{ block.settings.results_bg_color }};
    border: 1px solid {{ block.settings.border_color }};
    border-top: none;
    border-radius: 0 0 {{ block.settings.border_radius }}px {{ block.settings.border_radius }}px;
    max-height: 400px;
    overflow-y: auto;
    z-index: 1000;
    display: none;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .ai-search-results-{{ ai_gen_id }}.active {
    display: block;
  }

  .ai-search-section-{{ ai_gen_id }} {
    border-bottom: 1px solid {{ block.settings.border_color }};
  }

  .ai-search-section-{{ ai_gen_id }}:last-child {
    border-bottom: none;
  }

  .ai-search-section-title-{{ ai_gen_id }} {
    padding: 12px 16px 8px;
    font-size: 14px;
    font-weight: 600;
    color: {{ block.settings.section_title_color }};
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .ai-search-item-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    padding: 12px 16px;
    text-decoration: none;
    color: {{ block.settings.text_color }};
    border-bottom: 1px solid {{ block.settings.border_color }};
    transition: background-color 0.2s ease;
  }

  .ai-search-item-{{ ai_gen_id }}:last-child {
    border-bottom: none;
  }

  .ai-search-item-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.item_hover_color }};
  }

  .ai-search-item-image-{{ ai_gen_id }} {
    width: 50px;
    height: 50px;
    margin-right: 12px;
    flex-shrink: 0;border-radius: 4px;
    overflow: hidden;
    background-color: #f4f4f4;
  }

  .ai-search-item-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-search-item-content-{{ ai_gen_id }} {
    flex: 1;
    min-width: 0;
  }

  .ai-search-item-title-{{ ai_gen_id }} {
    font-size: 14px;
    font-weight: 500;
    margin: 0 0 4px;
    color: {{ block.settings.text_color }};
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .ai-search-item-price-{{ ai_gen_id }} {
    font-size: 13px;
    color: {{ block.settings.price_color }};
    margin: 0;
  }

  .ai-search-item-meta-{{ ai_gen_id }} {
    font-size: 12px;
    color: {{ block.settings.meta_color }};
    margin: 0;
  }

  .ai-search-no-results-{{ ai_gen_id }} {
    padding: 20px 16px;
    text-align: center;
    color: {{ block.settings.meta_color }};
    font-style: italic;
  }

  .ai-search-loading-{{ ai_gen_id }} {
    padding: 20px 16px;
    text-align: center;
    color: {{ block.settings.meta_color }};
  }

  @media screen and (max-width: 749px) {
    .ai-search-container-{{ ai_gen_id }} {
      max-width: 100%;
    }
    
    .ai-search-input-{{ ai_gen_id }} {
      font-size: 16px;
    }
  }
{% endstyle %}

<search-widget-{{ ai_gen_id }}
  class="ai-search-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <form class="ai-search-form-{{ ai_gen_id }}" role="search">
    <input
      type="search"
      class="ai-search-input-{{ ai_gen_id }}"
      placeholder="{{ block.settings.placeholder_text }}"
      autocomplete="off"
      aria-label="Search products and blog posts"
    >
    <button
      type="submit"
      class="ai-search-button-{{ ai_gen_id }}"
      aria-label="Search"
    >
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <circle cx="11" cy="11" r="8"></circle>
        <path d="m21 21-4.35-4.35"></path>
      </svg>
    </button>
  </form>

  <div class="ai-search-results-{{ ai_gen_id }}">
    <div class="ai-search-loading-{{ ai_gen_id }}" style="display: none;">
      Searching...
    </div>
    <div class="ai-search-content-{{ ai_gen_id }}"></div>
  </div>
</search-widget-{{ ai_gen_id }}>

<script>
(function() {
  class SearchWidget{{ ai_gen_id }} extends HTMLElement {
    constructor() {
      super();
      this.searchTimeout = null;
      this.cache = new Map();
    }

    connectedCallback() {
      this.form = this.querySelector('.ai-search-form-{{ ai_gen_id }}');
      this.input = this.querySelector('.ai-search-input-{{ ai_gen_id }}');
      this.results = this.querySelector('.ai-search-results-{{ ai_gen_id }}');
      this.loading = this.querySelector('.ai-search-loading-{{ ai_gen_id }}');
      this.content = this.querySelector('.ai-search-content-{{ ai_gen_id }}');

      this.setupEventListeners();
    }

    setupEventListeners() {
      this.input.addEventListener('input', (e) => {
        const query = e.target.value.trim();
        
        if (query.length >= 2) {
          clearTimeout(this.searchTimeout);
          this.searchTimeout = setTimeout(() => {
            this.performSearch(query);
          }, 300);
        } else {
          this.hideResults();
        }
      });

      this.input.addEventListener('focus', () => {
        if (this.input.value.trim().length >= 2) {
          this.showResults();
        }
      });

      this.form.addEventListener('submit', (e) => {
        e.preventDefault();
        const query = this.input.value.trim();
        if (query) {
          window.location.href = `/search?q=${encodeURIComponent(query)}`;
        }
      });

      document.addEventListener('click', (e) => {
        if (!this.contains(e.target)) {
          this.hideResults();
        }
      });
    }

    async performSearch(query) {
      if (this.cache.has(query)) {
        this.displayResults(this.cache.get(query));
        return;
      }

      this.showLoading();

      try {
        const [productsResponse, articlesResponse] = await Promise.all([
          fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product&resources[limit]=5`),
          fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=article&resources[limit]=3`)
        ]);

        const productsData = await productsResponse.json();
        const articlesData = await articlesResponse.json();

        const results = {
          products: productsData.resources?.results?.products || [],
          articles: articlesData.resources?.results?.articles || []
        };

        this.cache.set(query, results);
        this.displayResults(results);
      } catch (error) {
        console.error('Search error:', error);
        this.displayError();
      }
    }

    displayResults(results) {
      this.hideLoading();
      
      let html = '';

      if (results.products.length > 0) {
        html += `<div class="ai-search-section-{{ ai_gen_id }}">`;
        html += `<h3 class="ai-search-section-title-{{ ai_gen_id }}">Products</h3>`;
        
        results.products.forEach(product => {
          const price = product.price ? this.formatMoney(product.price) : '';
          const image = product.featured_image?.url || '';
          html += `<a href="${product.url}" class="ai-search-item-{{ ai_gen_id }}">
              <div class="ai-search-item-image-{{ ai_gen_id }}">
                ${image ? `<img src="${image}" alt="${product.title}" loading="lazy">` : ''}
              </div>
              <div class="ai-search-item-content-{{ ai_gen_id }}">
                <div class="ai-search-item-title-{{ ai_gen_id }}">${product.title}</div>
                ${price ? `<div class="ai-search-item-price-{{ ai_gen_id }}">${price}</div>` : ''}
              </div>
            </a>
          `;
        });
        
        html += `</div>`;
      }

      if (results.articles.length > 0) {
        html += `<div class="ai-search-section-{{ ai_gen_id }}">`;
        html += `<h3 class="ai-search-section-title-{{ ai_gen_id }}">Blog posts</h3>`;
        
        results.articles.forEach(article => {
          const image = article.featured_image?.url || '';
          const date = article.published_at ? new Date(article.published_at).toLocaleDateString() : '';
          
          html += `
            <a href="${article.url}" class="ai-search-item-{{ ai_gen_id }}">
              <div class="ai-search-item-image-{{ ai_gen_id }}">
                ${image ? `<img src="${image}" alt="${article.title}" loading="lazy">` : ''}
              </div>
              <div class="ai-search-item-content-{{ ai_gen_id }}">
                <div class="ai-search-item-title-{{ ai_gen_id }}">${article.title}</div>
                ${date ? `<div class="ai-search-item-meta-{{ ai_gen_id }}">${date}</div>` : ''}
              </div>
            </a>
          `;
        });
        
        html += `</div>`;
      }

      if (results.products.length === 0 && results.articles.length === 0) {
        html = `<div class="ai-search-no-results-{{ ai_gen_id }}">No results found</div>`;
      }

      this.content.innerHTML = html;
      this.showResults();
    }

    displayError() {
      this.hideLoading();
      this.content.innerHTML = `<div class="ai-search-no-results-{{ ai_gen_id }}">Search unavailable</div>`;
      this.showResults();
    }

    showLoading() {
      this.loading.style.display = 'block';
      this.content.innerHTML = '';this.showResults();
    }

    hideLoading() {
      this.loading.style.display = 'none';
    }

    showResults() {
      this.results.classList.add('active');
    }

    hideResults() {
      this.results.classList.remove('active');
    }

    formatMoney(cents) {
      return new Intl.NumberFormat('en-US', {
        style: 'currency',
        currency: 'USD'
      }).format(cents / 100);
    }
  }

  customElements.define('search-widget-{{ ai_gen_id }}', SearchWidget{{ ai_gen_id }});
})();
</script>

{% schema %}
{
  "name": "Search widget",
  "settings": [
    {
      "type": "header",
      "content": "Search settings"
    },
    {
      "type": "text",
      "id": "placeholder_text",
      "label": "Placeholder text",
      "default": "Search products and blog posts..."
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 300,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Maximum width",
      "default": 500
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "placeholder_color",
      "label": "Placeholder color",
      "default": "#999999"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "input_padding",
      "min": 8,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Input padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Button"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Results"
    },
    {
      "type": "color",
      "id": "results_bg_color",
      "label": "Results background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "item_hover_color",
      "label": "Item hover color",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "section_title_color",
      "label": "Section title color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price color",
      "default": "#000f9f"
    },
    {
      "type": "color",
      "id": "meta_color",
      "label": "Meta text color",
      "default": "#999999"
    }
  ],
  "presets": [
    {
      "name": "Search widget"
    }
  ]
}
{% endschema %}