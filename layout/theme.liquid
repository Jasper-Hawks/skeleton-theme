<!doctype html>
<html lang="{{ request.locale.iso_code }}">
  <head>


    {% # Inlined CSS Variables %}
    {% render 'css-variables' %}

    {% # Load and preload the critical CSS %}
    {{ 'minified.css' | asset_url | stylesheet_tag }}

    {% # Social, title, etc. %}
    {% render 'meta-tags' %}

<meta name="p:domain_verify" content="759b7bdd6ba4acf93ae1d56e81f83f81"/>


    {{ content_for_header }}

    <link
		rel="preload"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css"
      as="style"
      integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr"
      crossorigin="anonymous"
      onload="this.onload=null;this.rel='stylesheet'"
    >
  </head>

  <body>
    {% sections 'header-group' %}

    {% section 'collection-list' %}
    <div style="height:auto;">
      {{ content_for_layout }}
    </div>

    {% section 'menu-sidebar' %}
    {% section 'cart-sidebar' %}

    {% sections 'footer-group' %}


<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous" type="module" defer></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous" type="module" defer></script>


 <script>
   function onSubmit(token) {
     document.getElementById("demo-form").submit();
   }
 </script>

<script>
	if ('IntersectionObserver' in window){

		document.addEventListener('DOMContentLoaded', function(){
			function handleIntersection(entries){

				entries.map((entry) => {


					if (entry.isIntersecting){
						entry.target.style.backgroundImage = "url('" + entry.target.dataset.bgimage + "')";
						observer.unobserve(entry.target);

					}
				})
			}

			const lzBg = document.querySelectorAll('.lz-bg');
			const observer = new IntersectionObserver(handleIntersection, {
				rootMargin: '50px',

			})
			lzBg.forEach((lb) => {
				observer.observe(lb)
			})
		})
		
	}else{
			const lzBg = document.querySelectorAll('.lz-bg');
		lzBg.forEach((lb) => { 
			lb.style.backgroundImage = "url('" + lb.dataset.bgimage + "')"
	})

	}
	
</script>



<script>
	function moveDoran(){
	    document.getElementById('doran-product-widget').className = "container radley-regular";
	    document.getElementById('doran-product-question-widget').className = "container radley-regular";
	}
	requestAnimationFrame(moveDoran);

</script>
  </body>
</html>
