<!doctype html>
<html lang="{{ request.locale.iso_code }}">
  <head>
    {% # Inlined CSS Variables %}
    {% render 'css-variables' %}

    {% # Load and preload the critical CSS %}
    {{ 'main.css' | asset_url | stylesheet_tag }}

    {% # Social, title, etc. %}
    {% render 'meta-tags' %}

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr"
      crossorigin="anonymous"
    >
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q"
      crossorigin="anonymous"
    ></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
      href="https://fonts.googleapis.com/css2?family=Monsieur+La+Doulaise&family=Pinyon+Script&display=swap"
      rel="stylesheet"
    >
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
      href="https://fonts.googleapis.com/css2?family=Charm:wght@400;700&family=Monsieur+La+Doulaise&display=swap"
      rel="stylesheet"
    >
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Monsieur+La+Doulaise&display=swap" rel="stylesheet">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
      href="https://fonts.googleapis.com/css2?family=PT+Serif:ital,wght@0,400;0,700;1,400;1,700&display=swap"
      rel="stylesheet"
    >

    {{ content_for_header }}
  </head>

  <body>
    {% sections 'header-group' %}

    {% section 'collection-list' %}
    {{ content_for_layout }}

    {% section 'menu-sidebar' %}
    {% section 'cart-sidebar' %}

    {% sections 'footer-group' %}

    <script>
           function renderCartItems(cart) {
            const cartItemsContainer = document.getElementById('ajax-cart-sidebar');
            cartItemsContainer.innerHTML = ''; // Clear existing items

            // Loop through each item in the cart

            const itemHtml =  `  <div style="overflow-y: auto; overflow-x:hidden;">
        {% for item in cart.items %}
          <div class="row mb-1">
            <div class="col-md-1 cart-image">
              {% render 'image', image: item.image, url: item.url %}
            </div>
            <div class="col-md-5 product-title-table inconsolata-expanded">
              <p class="">{{ item.quantity }}x {{ item.product.title }}</p>
              <p id="price" class="">{{ item.product.price | money }}</p>

              <label>Quantity:</label>
              <input
                style="width:5rem;"
                type="number"
                name="updates[]"
                value="{{ item.quantity }}"
                id="quantity"
                onchange="updateQuantity();"
              >
              <p class="inconsolata-expanded">
                Subtotal <span id="subtotal">{{ item.quantity | times: item.product.price | money }}</span>
              </p>
              {{ 'cart.remove' | t | link_to: item.url_to_remove }}
            </div>
            <hr>
          </div>
        {% endfor %}
      </div>`

          
            //cart.items.forEach(item => {

                cartItemsContainer.innerHTML += itemHtml;
            
            //});
        }
          function fetchCartItems() {
            fetch('/cart.js')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                  //console.log(response.json())
                                     // renderCartItems(cart);
                    return response.json();
                })
                .then(cart => {
                  //console.log(response.json())
                    renderCartItems(cart);
                });
        }
    </script>
  </body>
</html>
