<aside
  class="d-flex flex-column flex-shrink-0 p-3 text-white sidebar-content pinyon-script-regular collapse"
  style="width: 100%;height:100%;"
  id="cart-sidebar"
>
  <a href="/" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none">
    <span class="fs-4">Cart</span>
  </a>
  <hr>
  <div id="ajax-cart-sidebar">
    {% comment %}
      <div style="overflow-y: auto; overflow-x:hidden;">
        {% for item in cart.items %}
          <div class="row mb-1">
            <div class="col-md-1 cart-image">
              {% render 'image', image: item.image, url: item.url %}
            </div>
            <div class="col-md-5 product-title-table inconsolata-expanded">
              <p class="">{{ item.quantity }}x {{ item.product.title }}</p>
              <p id="price" class="">{{ item.product.price | money }}</p>

              <label>Quantity:</label>
              <input
                style="width:5rem;"
                type="number"
                name="updates[]"
                value="{{ item.quantity }}"
                id="quantity"
                onchange="updateQuantity();"
              >
              <p class="inconsolata-expanded">
                Subtotal <span id="subtotal">{{ item.quantity | times: item.product.price | money }}</span>
              </p>
              {{ 'cart.remove' | t | link_to: item.url_to_remove }}
            </div>
            <hr>
          </div>
        {% endfor %}
      </div>
    {% endcomment %}
  </div>
  <hr>
  <h1>Total: {{ cart.total_price | money }}</h1>
  <input type="submit" name="checkout" value="{{ 'cart.checkout' | t }}">
</aside>
<script>
  let productForm = document.getElementById('product-form');
  //fetchCartItems();
          document.addEventListener('DOMContentLoaded', fetchCartItems);

        function renderCartItems(cart) {
            const cartItemsContainer = document.getElementById('ajax-cart-sidebar');
            cartItemsContainer.innerHTML = ''; // Clear existing items

            // Loop through each item in the cart
            cart.items.forEach(item => {
                const itemHtml = ```
                    <div class="cart-item">
                        <h4>${item.product_title}</h4>
                        <p>Quantity: ${item.quantity}</p>
                        <p>Price: ${(item.price / 100).toFixed(2)}</p>
                    </div>
                ```;
                cartItemsContainer.innerHTML += itemHtml;
            
            });
        }
          function fetchCartItems() {
            fetch('/cart.js')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                  //console.log(response.json())
                                      renderCartItems(response.json());
                })
        }



    document.getElementById('cart-toggle').addEventListener('click', function() {
    const sidebar = document.getElementById('cart-sidebar');
      console.log("cart button click")
    sidebar.classList.toggle('active'); // Toggle the 'active' class
  });
</script>

{% schema %}
{
  "name": "cart-sidebar",
  "settings": []
}
{% endschema %}
